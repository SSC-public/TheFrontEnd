{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport { pageLoadingAction } from './page';\nimport { profileUpdateAPI } from '../api/dashboard';\nexport const PROFILE_CHECK = 'PROFILE_CHECK';\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\nexport const PROFILE_FAIL = 'PROFILE_FAIL';\nexport const PROFILE_CLEAR = 'PROFILE_CLEAR';\nexport function profileClearAction() {\n  return {\n    type: PROFILE_CLEAR\n  };\n}\nexport function profileCheckerAction(fields) {\n  return {\n    type: PROFILE_CHECK,\n    payload: {\n      fields\n    }\n  };\n}\nexport function profileSuccessAction() {\n  return {\n    type: PROFILE_SUCCESS\n  };\n}\nexport function profileFailAction(errors) {\n  return {\n    type: PROFILE_FAIL,\n    payload: {\n      errors\n    }\n  };\n}\nexport function profileUpdateAction(fields, token) {\n  return (dispatch, getState) => {\n    dispatch(pageLoadingAction(true));\n    dispatch(profileCheckerAction(fields));\n    fields = _objectSpread({}, fields.profile);\n\n    if (_.isEmpty(getState().profile.errors)) {\n      console.log(fields);\n      console.log(token);\n      profileUpdateAPI(fields, token).then(res => {\n        const {\n          data\n        } = res;\n        console.log(data);\n\n        if (data.status_code === 200) {\n          dispatch(profileSuccessAction());\n        } else {\n          dispatch(profileFailAction(data.detail));\n        }\n      });\n    }\n\n    dispatch(profileFailAction({}));\n    dispatch(pageLoadingAction(false));\n  };\n}\nexport function passwordUpdateAction(fields, token) {\n  return (dispatch, getState) => {\n    dispatch(pageLoadingAction(true));\n    dispatch(profileCheckerAction(fields));\n    fields = _objectSpread({}, fields.password);\n\n    if (_.isEmpty(getState().profile.errors) && fields.new_password1 != '' && !_.isUndefined(fields.new_password1)) {\n      console.log(fields);\n      console.log(token);\n      passwordUpdateAction(fields, token).then(res => {\n        const {\n          data\n        } = res;\n        console.log(data);\n\n        if (data.status_code === 200) {\n          dispatch(profileSuccessAction());\n        } else {\n          dispatch(profileFailAction(data.detail));\n        }\n      });\n    }\n\n    dispatch(profileFailAction({}));\n    dispatch(pageLoadingAction(false));\n  };\n}","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/redux/actions/profile.js"],"names":["_","pageLoadingAction","profileUpdateAPI","PROFILE_CHECK","PROFILE_SUCCESS","PROFILE_FAIL","PROFILE_CLEAR","profileClearAction","type","profileCheckerAction","fields","payload","profileSuccessAction","profileFailAction","errors","profileUpdateAction","token","dispatch","getState","profile","isEmpty","console","log","then","res","data","status_code","detail","passwordUpdateAction","password","new_password1","isUndefined"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { pageLoadingAction } from './page';\nimport { profileUpdateAPI } from '../api/dashboard';\n\nexport const PROFILE_CHECK = 'PROFILE_CHECK';\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\nexport const PROFILE_FAIL = 'PROFILE_FAIL';\nexport const PROFILE_CLEAR = 'PROFILE_CLEAR';\n\nexport function profileClearAction() {\n  return {\n    type: PROFILE_CLEAR,\n  };\n}\n\nexport function profileCheckerAction(fields) {\n  return {\n    type: PROFILE_CHECK,\n    payload: {\n      fields,\n    },\n  };\n}\n\nexport function profileSuccessAction() {\n  return {\n    type: PROFILE_SUCCESS,\n  };\n}\n\nexport function profileFailAction(errors) {\n  return {\n    type: PROFILE_FAIL,\n    payload: {\n      errors,\n    },\n  };\n}\n\nexport function profileUpdateAction(fields, token) {\n  return (dispatch, getState) => {\n    dispatch(pageLoadingAction(true));\n    dispatch(profileCheckerAction(fields));\n    fields = { ...fields.profile };\n    if (_.isEmpty(getState().profile.errors)) {\n      console.log(fields);\n      console.log(token);\n      profileUpdateAPI(fields, token).then((res) => {\n        const { data } = res;\n        console.log(data);\n        if (data.status_code === 200) {\n          dispatch(profileSuccessAction());\n        } else {\n          dispatch(profileFailAction(data.detail));\n        }\n      });\n    }\n    dispatch(profileFailAction({}));\n    dispatch(pageLoadingAction(false));\n  };\n}\n\nexport function passwordUpdateAction(fields, token) {\n  return (dispatch, getState) => {\n    dispatch(pageLoadingAction(true));\n    dispatch(profileCheckerAction(fields));\n    fields = { ...fields.password };\n    if (\n      _.isEmpty(getState().profile.errors) &&\n      fields.new_password1 != '' && !_.isUndefined(fields.new_password1)\n    ) {\n      console.log(fields);\n      console.log(token);\n      passwordUpdateAction(fields, token).then((res) => {\n        const { data } = res;\n        console.log(data);\n        if (data.status_code === 200) {\n          dispatch(profileSuccessAction());\n        } else {\n          dispatch(profileFailAction(data.detail));\n        }\n      });\n    }\n    dispatch(profileFailAction({}));\n    dispatch(pageLoadingAction(false));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}