{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport Markdown from 'react-markdown';\n\nvar Terms =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Terms, _Component);\n\n  function Terms(props) {\n    var _this;\n\n    _classCallCheck(this, Terms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Terms).call(this, props));\n    _this.state = {\n      modalOpen: false\n    };\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Terms, [{\n    key: \"handleOpen\",\n    value: function handleOpen(event) {\n      event.preventDefault();\n      this.setState({\n        modalOpen: true\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose(event) {\n      event.preventDefault();\n      this.setState({\n        modalOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modalOpen = this.state.modalOpen;\n      var terms = this.props.terms;\n      return __jsx(Modal, {\n        trigger: __jsx(\"a\", {\n          href: \"#\",\n          onClick: this.handleOpen\n        }, \"\\u0645\\u0637\\u0627\\u0644\\u0639\\u0647 \\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646\"),\n        open: modalOpen,\n        onClose: this.handleClose,\n        size: \"small\"\n      }, __jsx(Modal.Content, null, __jsx(\"div\", {\n        dir: \"RTL\"\n      }, __jsx(Markdown, {\n        source: terms.term\n      }))), __jsx(Modal.Actions, null, __jsx(Button, {\n        primary: true,\n        onClick: this.handleClose\n      }, \"\\u0628\\u0633\\u062A\\u0646\")));\n    }\n  }]);\n\n  return Terms;\n}(Component);\n\nexport default Terms;","map":null,"metadata":{},"sourceType":"module"}