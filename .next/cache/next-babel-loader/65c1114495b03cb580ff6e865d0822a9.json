{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/main/milestones.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport HorizontalTimeline from 'react-horizontal-timeline';\nimport { Card, Grid, Transition, Label } from 'semantic-ui-react';\nexport default class Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleVisibality\", () => {\n      let preVisibality = this.state.visibality;\n      this.setState({\n        visibality: !preVisibality\n      });\n\n      if (preVisibality) {\n        setTimeout(function () {\n          this.setState({\n            visibality: preVisibality\n          });\n        }.bind(this), 1000);\n      }\n    });\n\n    this.state = {\n      curPhaseIdx: 2,\n      curIdx: 0,\n      prevIdx: -1,\n      visibality: true,\n      //milestones: id, title, start_time, end_time, tasks\n      milestones: props.milestones\n    };\n  }\n\n  render() {\n    const {\n      curIdx,\n      prevIdx\n    } = this.state;\n    const milestones = this.state.milestones;\n    const curStatus = prevIdx >= 0 ? milestones[curIdx].title : milestones[this.state.curPhaseIdx].title;\n    const prevStatus = prevIdx >= 0 ? milestones[prevIdx].title : '';\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        width: '80%',\n        height: '150px',\n        margin: '0 auto',\n        marginTop: '70px',\n        fontSize: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(HorizontalTimeline, {\n      styles: {\n        background: 'white',\n        foreground: '#1A79AD',\n        outline: '#dfdfdf'\n      },\n      index: this.state.curPhaseIdx,\n      indexClick: index => {\n        this.setState({\n          prevIdx: this.state.curIdx\n        });\n        this.setState({\n          curIdx: index\n        });\n        this.toggleVisibality();\n      },\n      values: milestones.map(x => x.start_time),\n      getLabel: function (date, index) {\n        return milestones[index].title;\n      },\n      minEventPadding: \"120\",\n      maxEventPadding: \"120\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Grid, {\n      centered: true,\n      style: {\n        height: '200',\n        foreground: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, __jsx(Transition, {\n      animation: \"fly right\",\n      duration: \"1000\",\n      visible: this.state.visibality,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(Card, {\n      style: {\n        width: '50%',\n        height: '100%'\n      },\n      foreground: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.visibality ? curIdx + 1 : prevIdx + 1, \" \\u0641\\u0627\\u0632\")), __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Card.Description, {\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.visibality ? curStatus : prevStatus)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/main/milestones.jsx"],"names":["React","HorizontalTimeline","Card","Grid","Transition","Label","Timeline","Component","constructor","props","preVisibality","state","visibality","setState","setTimeout","bind","curPhaseIdx","curIdx","prevIdx","milestones","render","curStatus","title","prevStatus","width","height","margin","marginTop","fontSize","background","foreground","outline","index","toggleVisibality","map","x","start_time","date"],"mappings":"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","sourcesContent":["import React from 'react';\nimport HorizontalTimeline from 'react-horizontal-timeline';\nimport { Card, Grid, Transition, Label } from 'semantic-ui-react';\n\nexport default class Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curPhaseIdx: 2,\n      curIdx: 0,\n      prevIdx: -1,\n      visibality: true,\n\n      //milestones: id, title, start_time, end_time, tasks\n      milestones: props.milestones,\n    };\n  }\n\n  toggleVisibality = () => {\n    let preVisibality = this.state.visibality;\n    this.setState({ visibality: !preVisibality });\n\n    if (preVisibality) {\n      setTimeout(\n        function() {\n          this.setState({ visibality: preVisibality });\n        }.bind(this),\n        1000,\n      );\n    }\n  }\n\n\n  render() {\n    const { curIdx, prevIdx } = this.state;\n    const milestones = this.state.milestones;\n    const curStatus =\n      prevIdx >= 0 ? milestones[curIdx].title : milestones[this.state.curPhaseIdx].title;\n    const prevStatus = prevIdx >= 0 ? milestones[prevIdx].title : '';\n\n    return (\n      <div>\n        <div\n          style={{\n            width: '80%',\n            height: '150px',\n            margin: '0 auto',\n            marginTop: '70px',\n            fontSize: '15px',\n          }}\n        >\n          <HorizontalTimeline\n            styles={{\n              background: 'white',\n              foreground: '#1A79AD',\n              outline: '#dfdfdf',\n            }}\n            index={this.state.curPhaseIdx}\n            indexClick={(index) => {\n              this.setState({ prevIdx: this.state.curIdx });\n              this.setState({ curIdx: index });\n              this.toggleVisibality();\n            }}\n            values={milestones.map((x) => x.start_time)}\n            getLabel={function(date, index) {\n              return milestones[index].title;\n            }}\n            minEventPadding=\"120\"\n            maxEventPadding=\"120\"\n          />\n        </div>\n        <div>\n          <Grid centered style={{ height: '200', foreground: 'red' }}>\n\n            <Transition animation=\"fly right\" duration=\"1000\" visible={this.state.visibality}>\n              <Card style={{ width: '50%', height: '100%' }} foreground=\"red\">\n                <Card.Content textAlign=\"left\">\n                  <Card.Header>{this.state.visibality ? curIdx+1 : prevIdx+1} فاز</Card.Header>\n                </Card.Content>\n                <Card.Content>\n                  <Card.Description textAlign=\"left\">{this.state.visibality ? curStatus : prevStatus}</Card.Description>\n                </Card.Content>\n              </Card>\n\n            </Transition>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}