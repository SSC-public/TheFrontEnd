{"ast":null,"code":"import axios from 'axios';\nimport BASE_ADDR from '.';\nexport function profileAPI() {\n  var url = \"\".concat(BASE_ADDR, \"/accounts/profile\");\n  return axios.get(url, {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  });\n}\n\nvar TASK = function TASK(id) {\n  return \"\".concat(BASE_ADDR, \"/resources/\").concat(id);\n};\n\nvar TASK_LIST = \"\".concat(BASE_ADDR, \"/resources\");\nexport function taskListAPI(token) {\n  return axios.get(TASK_LIST, {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  });\n}\nexport function taskAPI(id, token) {\n  return axios.get(TASK(id), {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  });\n}\n\nvar CONTEST = function CONTEST(id) {\n  return \"\".concat(BASE_ADDR, \"/contest/\").concat(id);\n};\n\nvar MILESTONE = function MILESTONE(contestID, milestoneID) {\n  return \"\".concat(BASE_ADDR, \"/contest/\").concat(contestID, \"/\").concat(milestoneID, \"/\");\n};\n\nexport function contestAPI(contestId, token) {\n  return axios.get(CONTEST(contestId), {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  });\n}\nexport function milestoneAPI(contestID, milestoneID, token) {\n  return axios.get(MILESTONE(contestID, milestoneID), {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/redux/api/dashboard.js"],"names":["axios","BASE_ADDR","profileAPI","url","get","headers","Authorization","token","TASK","id","TASK_LIST","taskListAPI","taskAPI","CONTEST","MILESTONE","contestID","milestoneID","contestAPI","contestId","milestoneAPI"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,GAAtB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,MAAMC,GAAG,aAAMF,SAAN,sBAAT;AACA,SAAOD,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AACpBE,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,mBAAYC,KAAZ;AADN;AADW,GAAf,CAAP;AAKD;;AAED,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD;AAAA,mBAAWR,SAAX,wBAAkCQ,EAAlC;AAAA,CAAb;;AACA,IAAMC,SAAS,aAAMT,SAAN,eAAf;AAEA,OAAO,SAASU,WAAT,CAAqBJ,KAArB,EAA4B;AACjC,SAAOP,KAAK,CAACI,GAAN,CAAUM,SAAV,EAAqB;AAC1BL,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,mBAAYC,KAAZ;AADN;AADiB,GAArB,CAAP;AAKD;AAED,OAAO,SAASK,OAAT,CAAiBH,EAAjB,EAAqBF,KAArB,EAA4B;AACjC,SAAOP,KAAK,CAACI,GAAN,CAAUI,IAAI,CAACC,EAAD,CAAd,EAAoB;AACzBJ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,mBAAYC,KAAZ;AADN;AADgB,GAApB,CAAP;AAKD;;AAED,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAACJ,EAAD;AAAA,mBAAWR,SAAX,sBAAgCQ,EAAhC;AAAA,CAAhB;;AACA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAYC,WAAZ;AAAA,mBAA+Bf,SAA/B,sBAAoDc,SAApD,cAAiEC,WAAjE;AAAA,CAAlB;;AAEA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BX,KAA/B,EAAsC;AAC3C,SAAOP,KAAK,CAACI,GAAN,CAAUS,OAAO,CAACK,SAAD,CAAjB,EAA8B;AACnCb,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,mBAAYC,KAAZ;AADN;AAD0B,GAA9B,CAAP;AAKD;AAED,OAAO,SAASY,YAAT,CAAsBJ,SAAtB,EAAiCC,WAAjC,EAA8CT,KAA9C,EAAqD;AAC1D,SAAOP,KAAK,CAACI,GAAN,CAAUU,SAAS,CAACC,SAAD,EAAYC,WAAZ,CAAnB,EAA6C;AAClDX,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,mBAAYC,KAAZ;AADN;AADyC,GAA7C,CAAP;AAKD","sourcesContent":["import axios from 'axios';\nimport BASE_ADDR from '.';\n\nexport function profileAPI() {\n  const url = `${BASE_ADDR}/accounts/profile`;\n  return axios.get(url, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nconst TASK = (id) => `${BASE_ADDR}/resources/${id}`;\nconst TASK_LIST = `${BASE_ADDR}/resources`;\n\nexport function taskListAPI(token) {\n  return axios.get(TASK_LIST, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function taskAPI(id, token) {\n  return axios.get(TASK(id), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nconst CONTEST = (id) => `${BASE_ADDR}/contest/${id}`;\nconst MILESTONE = (contestID, milestoneID) => `${BASE_ADDR}/contest/${contestID}/${milestoneID}/`;\n\nexport function contestAPI(contestId, token) {\n  return axios.get(CONTEST(contestId), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function milestoneAPI(contestID, milestoneID, token) {\n  return axios.get(MILESTONE(contestID, milestoneID), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}