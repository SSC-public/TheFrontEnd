{"ast":null,"code":"var _jsxFileName = \"/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/pages/dashboard/tasks/index.jsx\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport nextCookie from 'next-cookies';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withAuth from \"../../../components/global/withAuth\";\nimport Layout from \"../../../components/dashboard/layout\";\nimport Tasks from \"../../../components/dashboard/tasks\";\nimport { loadTaskListAction } from \"../../../redux/actions/tasks\";\n\nclass TaskPage extends Component {\n  componentDidMount() {\n    const {\n      load\n    } = this.props;\n    load();\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"DataDays 2020\")), __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(Tasks, {\n      tasks: tasks.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const {\n    tasks\n  } = state;\n  return {\n    tasks\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    load: () => dispatch(loadTaskListAction())\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(TaskPage));","map":{"version":3,"sources":["/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/pages/dashboard/tasks/index.jsx"],"names":["Head","nextCookie","React","Component","connect","withAuth","Layout","Tasks","loadTaskListAction","TaskPage","componentDidMount","load","props","render","tasks","list","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACAD,IAAAA,IAAI;AACL;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,WACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEE,KAAK,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AAlB8B;;AAqBjC,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,QAAM;AAAEJ,IAAAA;AAAF,MAAYG,KAAlB;AACA,SAAO;AACLH,IAAAA;AADK,GAAP;AAGD;;AAED,SAASK,kBAAT,CAA4BC,QAA5B,EAAsCF,QAAtC,EAAgD;AAC9C,SAAO;AACLP,IAAAA,IAAI,EAAE,MAAMS,QAAQ,CAACZ,kBAAkB,EAAnB;AADf,GAAP;AAGD;;AAED,eAAeH,QAAQ,CAAC,IAAD,CAAR,CAAeD,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf,CAAf","sourcesContent":["import Head from 'next/head';\nimport nextCookie from 'next-cookies';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withAuth from '~/components/global/withAuth';\nimport Layout from '~/components/dashboard/layout';\nimport Tasks from '~/components/dashboard/tasks';\nimport { loadTaskListAction } from '~/redux/actions/tasks';\n\nclass TaskPage extends Component {\n  componentDidMount() {\n    const { load } = this.props;\n    load();\n  }\n\n  render() {\n    const { tasks } = this.props;\n    return (\n      <>\n        <Head>\n          <title>DataDays 2020</title>\n        </Head>\n        <Layout>\n          <Tasks tasks={tasks.list} />\n        </Layout>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { tasks } = state;\n  return {\n    tasks,\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    load: () => dispatch(loadTaskListAction()),\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(TaskPage));\n"]},"metadata":{},"sourceType":"module"}