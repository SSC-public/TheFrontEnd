{"ast":null,"code":"var _jsxFileName = \"/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/profile/input.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { space, layout, color, border, typography } from 'styled-system';\nconst Label = styled.label`\n  ${space}\n  ${layout}\n  ${typography}\n`;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      value: this.props.initial\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      field,\n      error\n    } = this.props;\n    const {\n      value\n    } = this.state;\n    console.log(field);\n    console.log(error);\n    console.log(value);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"ok\") // <Form.Group inline>\n    //   <Label py={2} style={{ width: labelWidth }}>\n    //     {field.fa}:\n    //   </Label>\n    //   <Form.Input\n    //     placeholder={field.fa}\n    //     name={field.en}\n    //     value={value}\n    //     onChange={this.handleChange}\n    //     readOnly={field.readOnly}\n    //     width={6}\n    //     error={error}\n    //     type={field.pass === true ? 'password' : 'none'}\n    //     // transparent={field.readOnly}\n    //   />\n    // </Form.Group>\n    ;\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/profile/input.jsx"],"names":["React","Component","Form","styled","space","layout","color","border","typography","Label","label","Input","constructor","props","console","log","state","value","initial","handleChange","bind","event","setState","target","render","field","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,UAAvC,QAAyD,eAAzD;AAGA,MAAMC,KAAK,GAAGN,MAAM,CAACO,KAAM;IACvBN,KAAM;IACNC,MAAO;IACPG,UAAW;CAHf;;AAMA,MAAMG,KAAN,SAAoBV,SAApB,CAA8B;AAC5BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK;AAApB,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AADR,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKb,KAA9B;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAmBD;;AAxC2B;;AA2C9B,eAAeN,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { space, layout, color, border, typography } from 'styled-system';\n\n\nconst Label = styled.label`\n  ${space}\n  ${layout}\n  ${typography}\n`;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = { value: this.props.initial };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    const { field, error } = this.props;\n    const { value } = this.state;\n\n    console.log(field)\n    console.log(error)\n    console.log(value)\n    return (\n       <div>ok</div>\n      // <Form.Group inline>\n      //   <Label py={2} style={{ width: labelWidth }}>\n      //     {field.fa}:\n      //   </Label>\n      //   <Form.Input\n      //     placeholder={field.fa}\n      //     name={field.en}\n      //     value={value}\n      //     onChange={this.handleChange}\n      //     readOnly={field.readOnly}\n      //     width={6}\n      //     error={error}\n      //     type={field.pass === true ? 'password' : 'none'}\n      //     // transparent={field.readOnly}\n      //   />\n      // </Form.Group>\n    );\n  }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}