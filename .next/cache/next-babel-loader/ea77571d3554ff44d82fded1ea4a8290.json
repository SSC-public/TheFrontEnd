{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport 'highlight.js/styles/atom-one-dark.css';\nimport React from 'react';\nimport hljs from 'highlight.js';\n\nvar CodeBlock =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CodeBlock, _React$PureComponent);\n\n  function CodeBlock(props) {\n    var _this;\n\n    _classCallCheck(this, CodeBlock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CodeBlock).call(this, props));\n    _this.setRef = _this.setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CodeBlock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.highlightCode();\n    }\n  }, {\n    key: \"setRef\",\n    value: function setRef(el) {\n      this.codeEl = el;\n    }\n  }, {\n    key: \"highlightCode\",\n    value: function highlightCode() {\n      hljs.highlightBlock(this.codeEl);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          language = _this$props.language,\n          value = _this$props.value;\n      return __jsx(\"pre\", {\n        style: {\n          textAlign: 'left',\n          direction: 'ltr'\n        }\n      }, language !== null ? __jsx(\"p\", {\n        dir: \"LTR\"\n      }, \"In:\") : __jsx(\"p\", {\n        dir: \"LTR\"\n      }, \"Out:\"), __jsx(\"code\", {\n        ref: this.setRef,\n        className: \"language-python\"\n      }, value));\n    }\n  }]);\n\n  return CodeBlock;\n}(React.PureComponent);\n\nexport default CodeBlock;","map":null,"metadata":{},"sourceType":"module"}