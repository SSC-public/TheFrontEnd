{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport Input from '../../input';\nimport Button from '../../button';\nimport check from './check';\nimport { resetAPI } from \"../../../../redux/api/auth\";\n\nvar ForgotFields =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotFields, _Component);\n\n  function ForgotFields(props) {\n    var _this;\n\n    _classCallCheck(this, ForgotFields);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotFields).call(this, props));\n    _this.state = {\n      password_1: '',\n      password_2: '',\n      errors: {\n        password_1: false,\n        password_2: false\n      }\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.reset = _this.reset.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ForgotFields, [{\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this2 = this;\n\n      this.setState(function (prevState) {\n        var res = check(prevState);\n\n        if (res.problem) {\n          var notify = _this2.props.notify;\n          notify(res.problem);\n        } else {\n          _this2.reset();\n        }\n\n        return {\n          errors: res.errors\n        };\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$state = this.state,\n          password_1 = _this$state.password_1,\n          password_2 = _this$state.password_2;\n      var _this$props = this.props,\n          uid = _this$props.uid,\n          token = _this$props.token,\n          notify = _this$props.notify;\n      axios.post(resetAPI(), {\n        uid: uid,\n        token: token,\n        new_password1: password_1,\n        new_password2: password_2\n      }).then(function (res) {\n        var serverData = res.data;\n        console.log(serverData);\n\n        if (serverData.status_code !== 200) {\n          if (serverData.email) {\n            notify('tokenNotValid');\n          }\n\n          if (serverData.new_password2) {\n            notify('commonPassword');\n          }\n        } else {\n          notify('success');\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          password_1 = _this$state2.password_1,\n          password_2 = _this$state2.password_2;\n      var errors = this.state.errors;\n      return __jsx(Grid, {\n        centered: true\n      }, __jsx(Grid.Column, {\n        verticalAlign: \"middle\"\n      }, __jsx(Form, null, __jsx(Form.Group, {\n        width: 2,\n        dir: \"rtl\"\n      }, __jsx(Input, {\n        onChange: this.handleChange,\n        name: \"password_1\",\n        type: \"password\",\n        label: \"\\u06AF\\u0630\\u0631\\u0648\\u0627\\u0698\\u0647\",\n        value: password_1,\n        error: errors.password_1\n      }), __jsx(Input, {\n        onChange: this.handleChange,\n        name: \"password_2\",\n        label: \"\\u062A\\u06A9\\u0631\\u0627\\u0631 \\u06AF\\u0630\\u0631\\u0648\\u0627\\u0698\\u0647\",\n        type: \"password\",\n        value: password_2,\n        error: errors.password_2\n      })), __jsx(Form.Field, {\n        dir: \"rtl\"\n      }, __jsx(\"a\", {\n        href: \"/login\"\n      }, \"\\u0648\\u0631\\u0648\\u062F\")), __jsx(Button, {\n        onClick: this.onSubmit,\n        color: \"blue\",\n        text: \"\\u062A\\u063A\\u06CC\\u06CC\\u0631 \\u0631\\u0645\\u0632\"\n      }))));\n    }\n  }]);\n\n  return ForgotFields;\n}(Component);\n\nexport { ForgotFields as default };","map":null,"metadata":{},"sourceType":"module"}