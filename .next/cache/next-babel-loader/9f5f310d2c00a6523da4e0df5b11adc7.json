{"ast":null,"code":"import _ from 'lodash';\nimport { signupAPI } from '../api/signup';\nimport { pageLoadingAction } from './page';\nexport var SIGNUP_CLEAR = 'SIGNUP_CLEAR';\nexport var SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport var SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport var SIGNUP_CHECK = 'SIGNUP_CHECK';\nexport function signupClearAction() {\n  return {\n    type: SIGNUP_CLEAR\n  };\n}\n\nfunction signupSuccessAction() {\n  return {\n    type: SIGNUP_SUCCESS\n  };\n}\n\nfunction signupFailAction(errors) {\n  return {\n    type: SIGNUP_FAIL,\n    payload: {\n      errors: errors\n    }\n  };\n}\n\nexport function signupCheckerAction(fields) {\n  return {\n    type: SIGNUP_CHECK,\n    payload: {\n      fields: fields\n    }\n  };\n}\nexport function signupAction(fields) {\n  return function (dispatch, getState) {\n    dispatch(pageLoadingAction(true));\n    dispatch(signupClearAction());\n    dispatch(signupCheckerAction(fields));\n\n    if (_.isEmpty(getState().signup.errors)) {\n      signupAPI(fields).then(function (res) {\n        var data = res.data;\n\n        if (data.status_code === 200) {\n          dispatch(signupSuccessAction());\n          dispatch(pageLoadingAction(false));\n        } else {\n          dispatch(signupFailAction(data.detail));\n          dispatch(pageLoadingAction(false));\n        }\n      });\n    } else {\n      dispatch(pageLoadingAction(false));\n    }\n  };\n}","map":{"version":3,"sources":["/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/redux/actions/signup.js"],"names":["_","signupAPI","pageLoadingAction","SIGNUP_CLEAR","SIGNUP_SUCCESS","SIGNUP_FAIL","SIGNUP_CHECK","signupClearAction","type","signupSuccessAction","signupFailAction","errors","payload","signupCheckerAction","fields","signupAction","dispatch","getState","isEmpty","signup","then","res","data","status_code","detail"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,iBAAT,QAAkC,QAAlC;AAEA,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD;;AAED,SAASM,mBAAT,GAA+B;AAC7B,SAAO;AACLD,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;;AACD,SAASM,gBAAT,CAA0BC,MAA1B,EAAkC;AAChC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WADD;AAELO,IAAAA,OAAO,EAAE;AACPD,MAAAA,MAAM,EAANA;AADO;AAFJ,GAAP;AAMD;;AAED,OAAO,SAASE,mBAAT,CAA6BC,MAA7B,EAAqC;AAC1C,SAAO;AACLN,IAAAA,IAAI,EAAEF,YADD;AAELM,IAAAA,OAAO,EAAE;AACPE,MAAAA,MAAM,EAANA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASC,YAAT,CAAsBD,MAAtB,EAA8B;AACnC,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACd,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACAc,IAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACAS,IAAAA,QAAQ,CAACH,mBAAmB,CAACC,MAAD,CAApB,CAAR;;AACA,QAAId,CAAC,CAACkB,OAAF,CAAUD,QAAQ,GAAGE,MAAX,CAAkBR,MAA5B,CAAJ,EAAyC;AACvCV,MAAAA,SAAS,CAACa,MAAD,CAAT,CAAkBM,IAAlB,CAAuB,UAACC,GAAD,EAAS;AAAA,YACtBC,IADsB,GACbD,GADa,CACtBC,IADsB;;AAE9B,YAAIA,IAAI,CAACC,WAAL,KAAqB,GAAzB,EAA8B;AAC5BP,UAAAA,QAAQ,CAACP,mBAAmB,EAApB,CAAR;AACAO,UAAAA,QAAQ,CAACd,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACD,SAHD,MAGO;AACLc,UAAAA,QAAQ,CAACN,gBAAgB,CAACY,IAAI,CAACE,MAAN,CAAjB,CAAR;AACAR,UAAAA,QAAQ,CAACd,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACD;AACF,OATD;AAUD,KAXD,MAWO;AACLc,MAAAA,QAAQ,CAACd,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACD;AACF,GAlBD;AAmBD","sourcesContent":["import _ from 'lodash';\nimport { signupAPI } from '../api/signup';\nimport { pageLoadingAction } from './page';\n\nexport const SIGNUP_CLEAR = 'SIGNUP_CLEAR';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const SIGNUP_CHECK = 'SIGNUP_CHECK';\n\nexport function signupClearAction() {\n  return {\n    type: SIGNUP_CLEAR,\n  };\n}\n\nfunction signupSuccessAction() {\n  return {\n    type: SIGNUP_SUCCESS,\n  };\n}\nfunction signupFailAction(errors) {\n  return {\n    type: SIGNUP_FAIL,\n    payload: {\n      errors,\n    },\n  };\n}\n\nexport function signupCheckerAction(fields) {\n  return {\n    type: SIGNUP_CHECK,\n    payload: {\n      fields,\n    },\n  };\n}\n\nexport function signupAction(fields) {\n  return (dispatch, getState) => {\n    dispatch(pageLoadingAction(true));\n    dispatch(signupClearAction());\n    dispatch(signupCheckerAction(fields));\n    if (_.isEmpty(getState().signup.errors)) {\n      signupAPI(fields).then((res) => {\n        const { data } = res;\n        if (data.status_code === 200) {\n          dispatch(signupSuccessAction());\n          dispatch(pageLoadingAction(false));\n        } else {\n          dispatch(signupFailAction(data.detail));\n          dispatch(pageLoadingAction(false));\n        }\n      });\n    } else {\n      dispatch(pageLoadingAction(false));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}