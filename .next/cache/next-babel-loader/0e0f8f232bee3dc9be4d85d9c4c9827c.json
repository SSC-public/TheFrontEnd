{"ast":null,"code":"var _jsxFileName = \"/Users/pooya/Desktop/FrontEndMaster/TheFrontEnd/components/blog/post/comments/comment.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Comment, Divider, Form, Button, Modal, Header } from 'semantic-ui-react';\n\nconst Alert = ({\n  open\n}) => __jsx(Modal, {\n  trigger: __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Show Modal\"),\n  content: __jsx(Header, {\n    as: \"a\",\n    href: \".\",\n    style: {\n      float: 'right'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \".\\u0628\\u0631\\u0627\\u06CC \\u062B\\u0628\\u062A \\u0646\\u0638\\u0631 \\u0628\\u0627\\u06CC\\u062F \\u0648\\u0631\\u0648\\u062F \\u06A9\\u0646\\u06CC\\u062F\"),\n  actions: ['Snooze', {\n    key: 'done',\n    content: 'Done',\n    positive: true\n  }],\n  open: open,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n});\n\nclass CommentComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayReply: 'none',\n      open: false\n    };\n    this.toReply = this.toReply.bind(this);\n    this.doneReply = this.doneReply.bind(this);\n    this.onInput = this.onInput.bind(this);\n  }\n\n  toReply() {\n    const {\n      displayReply\n    } = this.state;\n\n    if (displayReply === 'block') {\n      this.setState({\n        displayReply: 'none'\n      });\n      return;\n    }\n\n    this.setState({\n      displayReply: 'block'\n    });\n  }\n\n  doneReply() {\n    // post data\n    this.setState({\n      displayReply: 'none'\n    });\n  }\n\n  onInput() {\n    // handle logged in\n    this.setState({\n      open: true\n    });\n  }\n\n  render() {\n    const {\n      author,\n      date,\n      content,\n      isReply = false\n    } = this.props;\n    const marginRight = isReply ? '2rem' : 'auto';\n    const display = isReply ? 'none' : 'auto';\n    const {\n      displayReply\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Alert, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(Divider, {\n      style: {\n        display\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), __jsx(Comment, {\n      style: {\n        marginRight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Comment.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Comment.Author, {\n      as: \"a\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, author), __jsx(Comment.Metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, date)), __jsx(Comment.Text, {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, content), __jsx(Comment.Actions, {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      onClick: this.toReply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u067E\\u0627\\u0633\\u062E \\u062F\\u0627\\u062F\\u0646\")), __jsx(Form, {\n      reply: true,\n      style: {\n        display: displayReply\n      },\n      onClick: this.onInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Form.TextArea, {\n      style: {\n        height: '5em',\n        direction: 'rtl'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(Button, {\n      secondary: true,\n      positive: true,\n      style: {\n        marginBottom: '1rem'\n      },\n      onClick: this.doneReply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u062B\\u0628\\u062A \\u067E\\u0627\\u0633\\u062E\")))));\n  }\n\n}\n\nexport default CommentComp;","map":{"version":3,"sources":["/Users/pooya/Desktop/FrontEndMaster/TheFrontEnd/components/blog/post/comments/comment.jsx"],"names":["React","Component","Comment","Divider","Form","Button","Modal","Header","Alert","open","float","key","content","positive","CommentComp","constructor","props","state","displayReply","toReply","bind","doneReply","onInput","setState","render","author","date","isReply","marginRight","display","justifyContent","textAlign","height","direction","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Comment, Divider, Form, Button, Modal, Header } from 'semantic-ui-react';\n\nconst Alert = ({ open }) => (\n  <Modal\n    trigger={<Button>Show Modal</Button>}\n    content={\n      <Header as='a' href='.' style={{ float: 'right' }}>\n        .برای ثبت نظر باید ورود کنید\n      </Header>\n    }\n    actions={['Snooze', { key: 'done', content: 'Done', positive: true }]}\n    open={open}\n  />\n);\n\nclass CommentComp extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { displayReply: 'none', open: false };\n    this.toReply = this.toReply.bind(this);\n    this.doneReply = this.doneReply.bind(this);\n    this.onInput = this.onInput.bind(this);\n  }\n\n  toReply () {\n    const { displayReply } = this.state;\n    if (displayReply === 'block') {\n      this.setState({ displayReply: 'none' });\n      return;\n    }\n    this.setState({ displayReply: 'block' });\n  }\n\n  doneReply () {\n    // post data\n    this.setState({ displayReply: 'none' });\n  }\n\n  onInput () {\n    // handle logged in\n    this.setState({ open: true });\n  }\n\n  render () {\n    const { author, date, content, isReply = false } = this.props;\n    const marginRight = isReply ? '2rem' : 'auto';\n    const display = isReply ? 'none' : 'auto';\n    const { displayReply } = this.state;\n    return (\n      <>\n        <Alert />\n        <Divider style={{ display }} />\n        <Comment style={{ marginRight }}>\n          <Comment.Content>\n            <Comment.Author as='a' style={{ float: 'right' }}>\n              {author}\n            </Comment.Author>\n            <Comment.Metadata>\n              <span>{date}</span>\n            </Comment.Metadata>\n            <Comment.Text\n              style={{ display: 'flex', justifyContent: 'flex-end', textAlign: 'right' }}\n            >\n              {content}\n            </Comment.Text>\n            <Comment.Actions style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <a onClick={this.toReply}>پاسخ دادن</a>\n            </Comment.Actions>\n            <Form reply style={{ display: displayReply }} onClick={this.onInput}>\n              <Form.TextArea style={{ height: '5em', direction: 'rtl' }} />\n              <Button secondary positive style={{ marginBottom: '1rem' }} onClick={this.doneReply}>\n                ثبت پاسخ\n              </Button>\n            </Form>\n          </Comment.Content>\n        </Comment>\n      </>\n    );\n  }\n}\n\nexport default CommentComp;\n"]},"metadata":{},"sourceType":"module"}