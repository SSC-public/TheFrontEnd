{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\nvar TableHeader = styled(Table.HeaderCell).withConfig({\n  displayName: \"laptab__TableHeader\",\n  componentId: \"qvtjrt-0\"\n})([\"background:rgba(80,87,99,0.05) !important;border-radius:0 !important;color:black !important;\"]);\nvar TableCell = styled(Table.Cell).withConfig({\n  displayName: \"laptab__TableCell\",\n  componentId: \"qvtjrt-1\"\n})([\"border-top:\", \" !important;border-bottom:\", \" !important;\"], function (props) {\n  return props.border;\n}, function (props) {\n  return props.border;\n});\nvar Info = styled.p.withConfig({\n  displayName: \"laptab__Info\",\n  componentId: \"qvtjrt-2\"\n})([\"text-align:left;margin-top:1rem;margin-left:1rem;\"]);\n\nvar GenerateMyRow = function GenerateMyRow(_ref) {\n  var team = _ref.team;\n  var color = '#00000066';\n  var border = \"3px solid \".concat(color);\n  return __jsx(Table.Row, {\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Table.Cell, {\n    textAlign: \"center\",\n    style: {\n      marginLeft: '3rem !important'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, team.total_score), team.scores.map(function (score) {\n    return __jsx(TableCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, score);\n  }), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, team.name), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, team.rank));\n};\n\nvar GenerateRows = function GenerateRows(_ref2) {\n  var myName = _ref2.myName,\n      teams = _ref2.teams,\n      topRank = _ref2.topRank;\n  var newTeams = teams;\n  console.log(\"topRank_______:\", topRank);\n  var rows = teams.map(function (x) {\n    var background = '#f8f8fa';\n    var rank = x.rank;\n    if (rank <= 3) background = '#fed76673';else if (rank <= 6) background = '#bbbbbb73';else if (rank <= 9) background = '#cd7f3273';\n    var borderRight = \"3px solid \".concat(background, \" !important\");\n    if (x.name === myName) return __jsx(GenerateMyRow, {\n      team: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n    return __jsx(Table.Row, {\n      style: {\n        background: background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        marginLeft: '3rem !important'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, x.total_score), x.scores.map(function (score) {\n      return __jsx(TableCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, score);\n    }), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, x.name), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        borderRight: borderRight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, x.rank));\n  });\n  return rows;\n};\n\nvar onChange = function onChange(e, pageInfo) {\n  console.log('event:', e);\n  console.log('pageInfo:', pageInfo);\n  console.log('active page:', pageInfo.activePage);\n};\n\nvar Footer = function Footer(props) {\n  var _jsx;\n\n  var numberOfTeams = props.teams.length;\n  var pageNumbers = numberOfTeams / 2;\n  console.log('_________number of teams:', numberOfTeams);\n  return __jsx(React.Fragment, null, __jsx(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\u0631\\u062A\\u0628\\u0647\\u200C\\u0647\\u0627\\u06CC 1 \\u0627\\u0644\\u06CC 2\"), __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Pagination, (_jsx = {\n    defaultActivePage: 1,\n    firstItem: null,\n    lastItem: null,\n    secondary: true\n  }, _defineProperty(_jsx, \"defaultActivePage\", pageNumbers / 2), _defineProperty(_jsx, \"totalPages\", pageNumbers), _defineProperty(_jsx, \"style\", {\n    marginTop: '0.5rem'\n  }), _defineProperty(_jsx, \"onPageChange\", onChange), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  }), _defineProperty(_jsx, \"__self\", this), _jsx)))));\n};\n\nvar Scoreboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scoreboard, _Component);\n\n  function Scoreboard(props) {\n    var _this;\n\n    _classCallCheck(this, Scoreboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scoreboard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e, pageInfo) {\n      console.log('event:', e);\n      console.log('pageInfo:', pageInfo);\n      console.log('active page:', pageInfo.activePage);\n    });\n\n    _this.state = {\n      milestone: props.milestone,\n      teams: props.teams,\n      tasks: props.tasks,\n      myName: 'team2',\n      topRank: 1\n    };\n    return _this;\n  }\n\n  _createClass(Scoreboard, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, __jsx(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"\\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632\"), this.state.tasks.map(function (x) {\n        return __jsx(Table.HeaderCell, {\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, x.name);\n      }), __jsx(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"\\u0646\\u0627\\u0645\"), __jsx(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"\\u0631\\u062A\\u0628\\u0647\"))), __jsx(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(GenerateRows, {\n        myName: this.state.myName,\n        teams: this.state.teams,\n        topRank: this.state.topRank,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), __jsx(Footer, {\n        teams: this.state.teams,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Scoreboard;\n}(Component);\n\nexport default Scoreboard; // const Scoreboard = ({ milestone, teams, tasks }) => {\n//   const myName = 'team2';\n//   return (\n//     <>\n//       <Table celled>\n//         <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n//             {tasks.map((x) => {\n//               return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n//             })}\n//             <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n//             <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           <GenerateRows myName={myName} teams={teams} />\n//         </Table.Body>\n//       </Table>\n//       <Footer teams={teams} />\n//     </>\n//   );\n// };\n// export default Scoreboard;","map":{"version":3,"sources":["/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx"],"names":["React","Component","Table","Pagination","Segment","TableRow","Tab","Header","Menu","Icon","styled","width","TableHeader","HeaderCell","TableCell","Cell","props","border","Info","p","GenerateMyRow","team","color","marginLeft","total_score","scores","map","score","name","rank","GenerateRows","myName","teams","topRank","newTeams","console","log","rows","x","background","borderRight","onChange","e","pageInfo","activePage","Footer","numberOfTeams","length","pageNumbers","marginTop","Scoreboard","state","milestone","tasks"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\n\nconst TableHeader = styled(Table.HeaderCell)`\n  background: rgba(80, 87, 99, 0.05) !important;\n  border-radius: 0 !important;\n  color: black !important;\n`;\n\nconst TableCell = styled(Table.Cell)`\n  border-top: ${(props) => props.border} !important;\n  border-bottom: ${(props) => props.border} !important;\n`;\n\nconst Info = styled.p`\n  text-align: left;\n  margin-top: 1rem;\n  margin-left: 1rem;\n`;\n\nconst GenerateMyRow = ({ team }) => {\n  const color = '#00000066';\n  const border = `3px solid ${color}`;\n  return (\n    <Table.Row warning>\n      <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n        {team.total_score}\n      </Table.Cell>\n\n      {team.scores.map((score) => {\n        return <TableCell textAlign=\"center\">{score}</TableCell>;\n      })}\n\n      <Table.Cell textAlign=\"center\" border={border}>\n        {team.name}\n      </Table.Cell>\n      <Table.Cell textAlign=\"center\" border={border}>\n        {team.rank}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst GenerateRows = ({ myName, teams, topRank }) => {\n  let newTeams = teams\n  console.log(\"topRank_______:\", topRank)\n\n  const rows = teams.map((x) => {\n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';\n    else if (rank <= 6) background = '#bbbbbb73';\n    else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return <GenerateMyRow team={x} />;\n\n    return (\n      <Table.Row style={{ background }}>\n        <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n          {x.total_score}\n        </Table.Cell>\n\n        {x.scores.map((score) => {\n          return <TableCell textAlign=\"center\">{score}</TableCell>;\n        })}\n\n        <Table.Cell textAlign=\"center\">{x.name}</Table.Cell>\n        <Table.Cell textAlign=\"center\" style={{ borderRight }}>\n          {x.rank}\n        </Table.Cell>\n      </Table.Row>\n    );\n  });\n  return rows;\n};\n\nconst onChange = (e, pageInfo) => {\n  console.log('event:', e);\n  console.log('pageInfo:', pageInfo);\n  console.log('active page:', pageInfo.activePage);\n};\n\nconst Footer = (props) => {\n  const numberOfTeams = props.teams.length;\n  const pageNumbers = numberOfTeams / 2;\n  console.log('_________number of teams:', numberOfTeams);\n\n  return (\n    <>\n      <Info>رتبه‌های 1 الی 2</Info>\n\n      <Table.Row>\n        <Table.Row>\n          <Pagination\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            secondary\n            defaultActivePage={pageNumbers / 2}\n            totalPages={pageNumbers}\n            style={{ marginTop: '0.5rem' }}\n            onPageChange={onChange}\n          />\n        </Table.Row>\n      </Table.Row>\n    </>\n  );\n};\n\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      milestone: props.milestone,\n      teams: props.teams,\n      tasks: props.tasks,\n      myName: 'team2',\n      topRank: 1\n    }\n  }\n\n  onChange = (e, pageInfo) => {\n    console.log('event:', e);\n    console.log('pageInfo:', pageInfo);\n    console.log('active page:', pageInfo.activePage);\n  };\n\n  render() {\n    return (\n      <>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n              {this.state.tasks.map((x) => {\n                return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n              })}\n              <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <GenerateRows myName={this.state.myName} teams={this.state.teams} topRank={this.state.topRank} />\n          </Table.Body>\n        </Table>\n\n        <Footer teams={this.state.teams} />\n      </>\n    );\n  }\n}\n\nexport default Scoreboard\n\n// const Scoreboard = ({ milestone, teams, tasks }) => {\n//   const myName = 'team2';\n\n//   return (\n//     <>\n//       <Table celled>\n//         <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n//             {tasks.map((x) => {\n//               return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n//             })}\n//             <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n//             <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n\n//         <Table.Body>\n//           <GenerateRows myName={myName} teams={teams} />\n//         </Table.Body>\n//       </Table>\n\n//       <Footer teams={teams} />\n//     </>\n//   );\n// };\n\n// export default Scoreboard;\n"]},"metadata":{},"sourceType":"module"}