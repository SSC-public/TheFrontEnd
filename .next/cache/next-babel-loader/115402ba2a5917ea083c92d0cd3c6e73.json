{"ast":null,"code":"import _ from 'lodash';\nimport { loginAPI, authAPI, refreshAPI } from '../api/auth';\nexport const LOGIN_CLEAR = 'LOGIN_CLEAR';\nexport const LOGIN_LOAD = 'LOGIN_LOAD';\nexport const LOGIN_UNLOAD = 'LOGIN_UNLOAD';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGIN_CHECK = 'LOGIN_CHECK';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const LOGOUT = 'LOGOUT';\n\nfunction loginClearAction() {\n  return {\n    type: LOGIN_CLEAR\n  };\n}\n\nfunction loginLoadAction() {\n  return {\n    type: LOGIN_LOAD\n  };\n}\n\nexport function loginUnloadAction() {\n  return {\n    type: LOGIN_UNLOAD\n  };\n}\n\nfunction loginSuccessAction(token) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: {\n      token\n    }\n  };\n}\n\nfunction loginFailAction(errors) {\n  return {\n    type: LOGIN_FAIL,\n    payload: {\n      errors\n    }\n  };\n}\n\nexport function loginCheckerAction(fields) {\n  return {\n    type: LOGIN_CHECK,\n    payload: {\n      fields\n    }\n  };\n}\nexport function loginAction(username, password) {\n  return (dispatch, getState) => {\n    dispatch(loginClearAction());\n    dispatch(loginLoadAction());\n    dispatch(loginCheckerAction({\n      username,\n      password\n    }));\n\n    if (_.isEmpty(getState().auth.errors)) {\n      loginAPI({\n        username,\n        password\n      }).then(res => {\n        const {\n          data\n        } = res;\n\n        if (data.status_code === 200) {\n          const token = {\n            refresh: data.refresh,\n            access: data.access\n          };\n          dispatch(loginSuccessAction(token));\n        } else {\n          dispatch(loginFailAction(data.detail));\n        }\n      });\n    } else {\n      dispatch(loginUnloadAction());\n    }\n  };\n}\n\nfunction setTokenAction(token) {\n  return {\n    type: SET_TOKEN,\n    payload: {\n      token\n    }\n  };\n}\n\nexport function authorizeAction() {\n  return (dispatch, getState) => {\n    const {\n      token\n    } = getState().auth;\n    dispatch(loginLoadAction());\n    authAPI(token).then(authRes => {\n      if (authRes.data.status_code !== 200) {\n        refreshAPI(token).then(refreshRes => {\n          if (refreshRes.data.status_code !== 200) {\n            dispatch(setTokenAction({}));\n          } else {\n            const newToken = {\n              refresh: token.refresh,\n              access: refreshRes.data.access\n            };\n            dispatch(setTokenAction(newToken));\n          }\n        });\n      } else {\n        dispatch(setTokenAction(token));\n      }\n    });\n  };\n}\nexport function logoutAction() {\n  return {\n    type: LOGOUT\n  };\n}","map":null,"metadata":{},"sourceType":"module"}