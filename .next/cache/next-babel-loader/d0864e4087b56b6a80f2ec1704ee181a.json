{"ast":null,"code":"import _ from 'lodash';\nimport produce from 'immer';\nimport cookie from 'js-cookie';\nimport { LOGIN_CLEAR, LOGIN_LOAD, LOGIN_UNLOAD, LOGIN_FAIL, LOGIN_SUCCESS, LOGIN_CHECK, SET_TOKEN, LOGOUT } from '../actions/auth';\nimport initialState from '../store/initialState';\n\nfunction loginClearReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    draft.loading = false;\n    draft.errors = {};\n    return draft;\n  });\n}\n\nfunction loginLoadReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    draft.loading = true;\n    return draft;\n  });\n}\n\nfunction loginUnloadReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    draft.loading = false;\n    return draft;\n  });\n}\n\nfunction loginSuccessReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    const {\n      token\n    } = action.payload;\n    draft.loading = false;\n    draft.errors = {};\n    draft.token = token;\n    cookie.set('token', token.access, {\n      expires: 1\n    });\n    return draft;\n  });\n}\n\nfunction loginFailReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    const {\n      errors\n    } = action.payload;\n    draft.loading = false;\n    draft.success = false;\n    draft.errors = errors;\n    return draft;\n  });\n}\n\nfunction loginCheckerReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    const {\n      fields\n    } = action.payload;\n\n    _.forEach(fields, (value, key) => {\n      if (value === '') {\n        draft.errors[key] = 'فیلد خالی است.';\n      }\n    });\n\n    return draft;\n  });\n}\n\nfunction setTokenReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    const {\n      token\n    } = action.payload;\n    draft.token = token;\n    draft.loading = false;\n    return draft;\n  });\n}\n\nfunction logoutReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    draft.token = {};\n    draft.loading = false;\n    cookie.remove('token');\n    return draft;\n  });\n}\n\nfunction authReducers(state = initialState.auth, action) {\n  switch (action.type) {\n    case LOGIN_CLEAR:\n      return loginClearReducer(state, action);\n\n    case LOGIN_LOAD:\n      return loginLoadReducer(state, action);\n\n    case LOGIN_UNLOAD:\n      return loginUnloadReducer(state, action);\n\n    case LOGIN_FAIL:\n      return loginFailReducer(state, action);\n\n    case LOGIN_SUCCESS:\n      return loginSuccessReducer(state, action);\n\n    case LOGIN_CHECK:\n      return loginCheckerReducer(state, action);\n\n    case SET_TOKEN:\n      return setTokenReducer(state, action);\n\n    case LOGOUT:\n      return logoutReducer(state, action);\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducers;","map":{"version":3,"sources":["/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/redux/reducers/auth.js"],"names":["_","produce","cookie","LOGIN_CLEAR","LOGIN_LOAD","LOGIN_UNLOAD","LOGIN_FAIL","LOGIN_SUCCESS","LOGIN_CHECK","SET_TOKEN","LOGOUT","initialState","loginClearReducer","state","auth","action","draft","loading","errors","loginLoadReducer","loginUnloadReducer","loginSuccessReducer","token","payload","set","access","expires","loginFailReducer","success","loginCheckerReducer","fields","forEach","value","key","setTokenReducer","logoutReducer","remove","authReducers","type"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport produce from 'immer';\nimport cookie from 'js-cookie';\nimport {\n  LOGIN_CLEAR,\n  LOGIN_LOAD,\n  LOGIN_UNLOAD,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_CHECK,\n  SET_TOKEN,\n  LOGOUT,\n} from '../actions/auth';\nimport initialState from '../store/initialState';\n\nfunction loginClearReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.loading = false;\n    draft.errors = {};\n    return draft;\n  });\n}\n\nfunction loginLoadReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.loading = true;\n    return draft;\n  });\n}\n\nfunction loginUnloadReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.loading = false;\n    return draft;\n  });\n}\n\nfunction loginSuccessReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { token } = action.payload;\n    draft.loading = false;\n    draft.errors = {};\n    draft.token = token;\n    cookie.set('token', token.access, { expires: 1 });\n    return draft;\n  });\n}\n\nfunction loginFailReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { errors } = action.payload;\n    draft.loading = false;\n    draft.success = false;\n    draft.errors = errors;\n    return draft;\n  });\n}\n\nfunction loginCheckerReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { fields } = action.payload;\n    _.forEach(fields, (value, key) => {\n      if (value === '') {\n        draft.errors[key] = 'فیلد خالی است.';\n      }\n    });\n    return draft;\n  });\n}\n\nfunction setTokenReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { token } = action.payload;\n    draft.token = token;\n    draft.loading = false;\n    return draft;\n  });\n}\n\nfunction logoutReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.token = {};\n    draft.loading = false;\n    cookie.remove('token');\n    return draft;\n  });\n}\n\nfunction authReducers(state = initialState.auth, action) {\n  switch (action.type) {\n    case LOGIN_CLEAR:\n      return loginClearReducer(state, action);\n    case LOGIN_LOAD:\n      return loginLoadReducer(state, action);\n    case LOGIN_UNLOAD:\n      return loginUnloadReducer(state, action);\n    case LOGIN_FAIL:\n      return loginFailReducer(state, action);\n    case LOGIN_SUCCESS:\n      return loginSuccessReducer(state, action);\n    case LOGIN_CHECK:\n      return loginCheckerReducer(state, action);\n    case SET_TOKEN:\n      return setTokenReducer(state, action);\n    case LOGOUT:\n      return logoutReducer(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default authReducers;\n"]},"metadata":{},"sourceType":"module"}