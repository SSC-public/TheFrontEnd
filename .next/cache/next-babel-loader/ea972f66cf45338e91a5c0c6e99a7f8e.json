{"ast":null,"code":"var _jsxFileName = \"/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\nconst TableHeader = styled(Table.HeaderCell).withConfig({\n  displayName: \"laptab__TableHeader\",\n  componentId: \"qvtjrt-0\"\n})([\"background:rgba(80,87,99,0.05) !important;border-radius:0 !important;color:black !important;\"]);\nconst TableCell = styled(Table.Cell).withConfig({\n  displayName: \"laptab__TableCell\",\n  componentId: \"qvtjrt-1\"\n})([\"border-top:\", \" !important;border-bottom:\", \" !important;\"], props => props.border, props => props.border);\nconst Info = styled.p.withConfig({\n  displayName: \"laptab__Info\",\n  componentId: \"qvtjrt-2\"\n})([\"text-align:left;margin-top:1rem;margin-left:1rem;\"]);\n\nconst GenerateMyRow = ({\n  team\n}) => {\n  const color = '#00000066';\n  const border = `3px solid ${color}`;\n  return __jsx(Table.Row, {\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Table.Cell, {\n    textAlign: \"center\",\n    style: {\n      marginLeft: '3rem !important'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, team.total_score), team.scores.map(score => {\n    return __jsx(TableCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, score);\n  }), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, team.name), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, team.rank));\n};\n\nconst GenerateRows = ({\n  myName,\n  teams,\n  topRank\n}) => {\n  let newTeams = teams.slice(topRank - 1, topRank + 19);\n  const rows = newTeams.map(x => {\n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';else if (rank <= 6) background = '#bbbbbb73';else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return __jsx(GenerateMyRow, {\n      team: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n    return __jsx(Table.Row, {\n      style: {\n        background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        marginLeft: '3rem !important'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, x.total_score), x.scores.map(score => {\n      return __jsx(TableCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, score);\n    }), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, x.name), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        borderRight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, x.rank));\n  });\n  return rows;\n};\n\nconst Footer = props => {\n  const numberOfTeams = props.teams.length;\n  const pageNumbers = Math.ceil(numberOfTeams / 20);\n  console.log(\"page numbers : \", pageNumbers);\n  return __jsx(React.Fragment, null, __jsx(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \", props.topRank + 19, \" \\u0627\\u0644\\u06CC \", props.topRank, \" \\u0631\\u062A\\u0628\\u0647\\u200C\\u0647\\u0627\\u06CC\"), __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    defaultActivePage: 1,\n    firstItem: null,\n    lastItem: null,\n    secondary: true,\n    defaultActivePage: pageNumbers,\n    totalPages: pageNumbers,\n    style: {\n      marginTop: '0.5rem'\n    },\n    onPageChange: props.changePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))));\n};\n\nfunction onPageChange(e, pageInfo) {\n  let newTopRank = (pageInfo.activePage - 1) * 20 + 1;\n  this.setState({\n    topRank: newTopRank\n  });\n}\n\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      milestone: props.milestone,\n      teams: props.teams,\n      tasks: props.tasks,\n      myName: 'parsaalian0',\n      topRank: 1\n    };\n    this.changePage = onPageChange.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Table, {\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632\"), this.state.tasks.map(x => {\n      return __jsx(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, x.name);\n    }), __jsx(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\u0646\\u0627\\u0645\"), __jsx(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\u0631\\u062A\\u0628\\u0647\"))), __jsx(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(GenerateRows, {\n      myName: this.state.myName,\n      teams: this.state.teams,\n      topRank: this.state.topRank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), __jsx(Footer, {\n      teams: this.state.teams,\n      changePage: this.changePage,\n      topRank: this.state.topRank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Scoreboard;","map":{"version":3,"sources":["/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx"],"names":["React","Component","Table","Pagination","Segment","TableRow","Tab","Header","Menu","Icon","styled","width","TableHeader","HeaderCell","TableCell","Cell","props","border","Info","p","GenerateMyRow","team","color","marginLeft","total_score","scores","map","score","name","rank","GenerateRows","myName","teams","topRank","newTeams","slice","rows","x","background","borderRight","Footer","numberOfTeams","length","pageNumbers","Math","ceil","console","log","marginTop","changePage","onPageChange","e","pageInfo","newTopRank","activePage","setState","Scoreboard","constructor","state","milestone","tasks","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\n\nconst TableHeader = styled(Table.HeaderCell)`\n  background: rgba(80, 87, 99, 0.05) !important;\n  border-radius: 0 !important;\n  color: black !important;\n`;\n\nconst TableCell = styled(Table.Cell)`\n  border-top: ${(props) => props.border} !important;\n  border-bottom: ${(props) => props.border} !important;\n`;\n\nconst Info = styled.p`\n  text-align: left;\n  margin-top: 1rem;\n  margin-left: 1rem;\n`;\n\nconst GenerateMyRow = ({ team }) => {\n  const color = '#00000066';\n  const border = `3px solid ${color}`;\n  return (\n    <Table.Row warning>\n      <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n        {team.total_score}\n      </Table.Cell>\n\n      {team.scores.map((score) => {\n        return <TableCell textAlign=\"center\">{score}</TableCell>;\n      })}\n\n      <Table.Cell textAlign=\"center\" border={border}>\n        {team.name}\n      </Table.Cell>\n      <Table.Cell textAlign=\"center\" border={border}>\n        {team.rank}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst GenerateRows = ({ myName, teams, topRank }) => {\n  let newTeams = teams.slice(topRank - 1, topRank + 19)\n\n  const rows = newTeams.map((x) => {\n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';\n    else if (rank <= 6) background = '#bbbbbb73';\n    else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return <GenerateMyRow team={x} />;\n\n    return (\n      <Table.Row style={{ background }}>\n        <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n          {x.total_score}\n        </Table.Cell>\n\n        {x.scores.map((score) => {\n          return <TableCell textAlign=\"center\">{score}</TableCell>;\n        })}\n\n        <Table.Cell textAlign=\"center\">{x.name}</Table.Cell>\n        <Table.Cell textAlign=\"center\" style={{ borderRight }}>\n          {x.rank}\n        </Table.Cell>\n      </Table.Row>\n    );\n  });\n  return rows;\n};\n\n\nconst Footer = (props) => {\n  const numberOfTeams = props.teams.length;\n  const pageNumbers = Math.ceil(numberOfTeams / 20);\n  console.log(\"page numbers : \", pageNumbers)\n\n  return (\n    <>\n      <Info> {props.topRank + 19} الی {props.topRank} رتبه‌های</Info>\n\n      <Table.Row>\n        <Table.Row>\n          <Pagination\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            secondary\n            defaultActivePage={pageNumbers}\n            totalPages={pageNumbers}\n            style={{ marginTop: '0.5rem' }}\n            onPageChange={props.changePage}\n          />\n        </Table.Row>\n      </Table.Row>\n    </>\n  );\n};\n\nfunction onPageChange(e, pageInfo) {\n  let newTopRank = (pageInfo.activePage - 1) * 20 + 1\n  this.setState({topRank: newTopRank})\n}\n\nclass Scoreboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      milestone: props.milestone,\n      teams: props.teams,\n      tasks: props.tasks,\n      myName: 'parsaalian0',\n      topRank: 1\n    }\n    this.changePage = onPageChange.bind(this)\n  }\n\n  render() {\n    return (\n      <>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n              {this.state.tasks.map((x) => {\n                return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n              })}\n              <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n              <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <GenerateRows myName={this.state.myName} teams={this.state.teams} topRank={this.state.topRank} />\n          </Table.Body>\n        </Table>\n\n        <Footer teams={this.state.teams} changePage={this.changePage} topRank={this.state.topRank}/>\n      </>\n    );\n  }\n}\n\nexport default Scoreboard\n\n"]},"metadata":{},"sourceType":"module"}