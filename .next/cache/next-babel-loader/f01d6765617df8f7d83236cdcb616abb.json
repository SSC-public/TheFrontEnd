{"ast":null,"code":"import _ from 'lodash';\nimport validator from 'validator';\nvar fields = [// {\n//   en: 'username',\n//   fa: 'نام کاربری',\n//   readOnly: true,\n// },\n{\n  en: 'firstname_fa',\n  fa: 'نام به فارسی',\n  readOnly: false\n}, {\n  en: 'lastname_fa',\n  fa: 'نام خانوادگی به فارسی',\n  readOnly: false\n}, {\n  en: 'firstname_en',\n  fa: 'نام به انگلیسی',\n  readOnly: false\n}, {\n  en: 'lastname_en',\n  fa: 'نام خانوادگی به انگلیسی',\n  readOnly: false\n}, // {\n//   en: 'email',\n//   fa: 'ایمیل',\n//   readOnly: true,\n// },\n{\n  en: 'birth_date',\n  fa: 'تاریخ تولد',\n  readOnly: false,\n  date: true\n}, {\n  en: 'university',\n  fa: 'دانشگاه',\n  readOnly: false\n}, // {\n//   en: 'education',\n//   fa: 'تحصیلات',\n//   readOnly: true,\n// },\n// {\n//   en: 'residence',\n//   fa: 'محل اقامت',\n//   readOnly: true,\n// },\n// {\n//   en: 'calling_number',\n//   fa: 'تلفن همراه',\n//   readOnly: true,\n// },\n{\n  en: 'password_1',\n  fa: 'رمز عبور',\n  readOnly: false,\n  pass: true\n}, {\n  en: 'password_2',\n  fa: 'تکرار رمز عبور',\n  readOnly: false,\n  pass: true\n}];\n\nfunction check(fields) {\n  var res = {};\n  var errors = {\n    firstname_fa: false,\n    lastname_fa: false,\n    firstname_en: false,\n    lastname_en: false,\n    username: false,\n    email: false,\n    birth_date: false,\n    university: false,\n    password_1: false,\n    password_2: false\n  };\n\n  _.forEach(fields, function (value, key) {\n    if ((value === undefined || value === '') && key !== 'password_1' && key != 'password_2') {\n      errors[key] = true;\n      res.problem = 'incompleteFields';\n    }\n  }); // if (!validator.isEmail(fields.email)) {\n  //   res.problem = 'invalidEmail';\n  //   errors.email = true;\n  //   res.errors = errors;\n  //   return res;\n  // }\n\n\n  if (fields.password_1 !== fields.password_2) {\n    res.problem = 'passwordsNotSame';\n    errors.password_2 = true;\n  }\n\n  res.errors = errors;\n  return res;\n}\n\nfunction reverseBirthDate(birth_date) {\n  if (birth_date === undefined) {\n    return birth_date;\n  }\n\n  var parts = birth_date.split('-');\n  parts.reverse();\n  var newbirth_date = parts[0] + '-' + parts[1] + '-' + parts[2];\n  return newbirth_date;\n}\n\nexport { fields, reverseBirthDate, check };","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/profile/utils.js"],"names":["_","validator","fields","en","fa","readOnly","date","pass","check","res","errors","firstname_fa","lastname_fa","firstname_en","lastname_en","username","email","birth_date","university","password_1","password_2","forEach","value","key","undefined","problem","reverseBirthDate","parts","split","reverse","newbirth_date"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport validator from 'validator';\n\nconst fields = [\n  // {\n  //   en: 'username',\n  //   fa: 'نام کاربری',\n  //   readOnly: true,\n  // },\n  {\n    en: 'firstname_fa',\n    fa: 'نام به فارسی',\n    readOnly: false,\n  },\n  {\n    en: 'lastname_fa',\n    fa: 'نام خانوادگی به فارسی',\n    readOnly: false,\n  },\n  {\n    en: 'firstname_en',\n    fa: 'نام به انگلیسی',\n    readOnly: false,\n  },\n  {\n    en: 'lastname_en',\n    fa: 'نام خانوادگی به انگلیسی',\n    readOnly: false,\n  },\n  // {\n  //   en: 'email',\n  //   fa: 'ایمیل',\n  //   readOnly: true,\n  // },\n  {\n    en: 'birth_date',\n    fa: 'تاریخ تولد',\n    readOnly: false,\n    date: true,\n  },\n  {\n    en: 'university',\n    fa: 'دانشگاه',\n    readOnly: false,\n  },\n  // {\n  //   en: 'education',\n  //   fa: 'تحصیلات',\n  //   readOnly: true,\n  // },\n  // {\n  //   en: 'residence',\n  //   fa: 'محل اقامت',\n  //   readOnly: true,\n  // },\n  // {\n  //   en: 'calling_number',\n  //   fa: 'تلفن همراه',\n  //   readOnly: true,\n  // },\n  {\n    en: 'password_1',\n    fa: 'رمز عبور',\n    readOnly: false,\n    pass: true,\n  },\n  {\n    en: 'password_2',\n    fa: 'تکرار رمز عبور',\n    readOnly: false,\n    pass: true,\n  },\n];\n\nfunction check(fields) {\n  const res = {};\n  const errors = {\n    firstname_fa: false,\n    lastname_fa: false,\n    firstname_en: false,\n    lastname_en: false,\n    username: false,\n    email: false,\n    birth_date: false,\n    university: false,\n    password_1: false,\n    password_2: false,\n  };\n\n  _.forEach(fields, (value, key) => {\n    if ((value === undefined || value === '') && key !== 'password_1' && key != 'password_2') {\n      errors[key] = true;\n      res.problem = 'incompleteFields';\n    }\n  });\n\n  // if (!validator.isEmail(fields.email)) {\n  //   res.problem = 'invalidEmail';\n  //   errors.email = true;\n  //   res.errors = errors;\n  //   return res;\n  // }\n\n  if (fields.password_1 !== fields.password_2) {\n    res.problem = 'passwordsNotSame';\n    errors.password_2 = true;\n  }\n  res.errors = errors;\n  return res;\n}\n\nfunction reverseBirthDate(birth_date) {\n  if (birth_date === undefined) {\n    return birth_date;\n  }\n  let parts = birth_date.split('-');\n  parts.reverse();\n  let newbirth_date = parts[0] + '-' + parts[1] + '-' + parts[2];\n\n  return newbirth_date;\n}\nexport { fields, reverseBirthDate, check };\n"]},"metadata":{},"sourceType":"module"}