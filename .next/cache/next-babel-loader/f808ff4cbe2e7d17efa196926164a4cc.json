{"ast":null,"code":"var _jsxFileName = \"/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\nvar TableHeader = styled(Table.HeaderCell).withConfig({\n  displayName: \"laptab__TableHeader\",\n  componentId: \"qvtjrt-0\"\n})([\"background:rgba(80,87,99,0.05) !important;border-radius:0 !important;color:black !important;\"]);\nvar TableCell = styled(Table.Cell).withConfig({\n  displayName: \"laptab__TableCell\",\n  componentId: \"qvtjrt-1\"\n})([\"border-top:\", \" !important;border-bottom:\", \" !important;\"], function (props) {\n  return props.border;\n}, function (props) {\n  return props.border;\n});\nvar Info = styled.p.withConfig({\n  displayName: \"laptab__Info\",\n  componentId: \"qvtjrt-2\"\n})([\"text-align:left;margin-top:1rem;margin-left:1rem;\"]);\n\nvar GenerateMyRow = function GenerateMyRow(_ref) {\n  var name = _ref.name,\n      score = _ref.score,\n      rank = _ref.rank,\n      display = _ref.display;\n  var color = '#00000066';\n  var border = \"1px solid \".concat(color);\n  return __jsx(Table.Row, {\n    style: {\n      display: display\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    textAlign: \"right\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, score), __jsx(TableCell, {\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, name), __jsx(TableCell, {\n    border: border,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, rank));\n};\n\nvar GenerateRows = function GenerateRows(_ref2) {\n  var data = _ref2.data,\n      myName = _ref2.myName,\n      teams = _ref2.teams;\n  var rows = teams.map(function (x) {\n    var background = '#f8f8fa';\n    var rank = x.rank;\n    if (rank <= 3) background = '#fed76673';else if (rank <= 6) background = '#bbbbbb73';else if (rank <= 9) background = '#cd7f3273';\n    var borderRight = \"3px solid \".concat(background, \" !important\");\n    if (x.name === myName) return __jsx(GenerateMyRow, {\n      name: x.name,\n      score: \"10\",\n      rank: x.rank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n    return __jsx(Table.Row, {\n      style: {\n        background: background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      textAlign: \"right\",\n      style: {\n        marginLeft: '3rem !important'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"points\"), x.scores.map(function (score) {\n      return __jsx(TableCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, score);\n    }), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, x.name), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        borderRight: borderRight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, x.rank));\n  });\n  return rows;\n};\n\nvar Footer = function Footer() {\n  return __jsx(React.Fragment, null, __jsx(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u0631\\u062A\\u0628\\u0647\\u200C\\u0647\\u0627\\u06CC 1 \\u0627\\u0644\\u06CC 20\"), __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    defaultActivePage: 1,\n    firstItem: null,\n    lastItem: null,\n    secondary: true,\n    totalPages: 10,\n    style: {\n      marginTop: '0.5rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n};\n\nvar Scoreboard = function Scoreboard(_ref3) {\n  var data = _ref3.data,\n      milestone = _ref3.milestone,\n      teams = _ref3.teams,\n      tasks = _ref3.tasks;\n  var myName = 'پویا معینی';\n  var display = data.some(function (x) {\n    return x.first === myName;\n  }) ? 'none' : '';\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632\"), tasks.map(function (x) {\n    return __jsx(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, x.name);\n  }), __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\u0646\\u0627\\u0645\"), __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"\\u0631\\u062A\\u0628\\u0647\"))), __jsx(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(GenerateMyRow, {\n    name: myName,\n    score: \"100\",\n    rank: \"0\",\n    display: display,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), __jsx(GenerateRows, {\n    data: data,\n    myName: myName,\n    teams: teams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};\n\nexport default Scoreboard;","map":{"version":3,"sources":["/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx"],"names":["React","Table","Pagination","Segment","TableRow","Tab","Header","Menu","Icon","styled","width","TableHeader","HeaderCell","TableCell","Cell","props","border","Info","p","GenerateMyRow","name","score","rank","display","color","GenerateRows","data","myName","teams","rows","map","x","background","borderRight","marginLeft","scores","Footer","marginTop","Scoreboard","milestone","tasks","some","first"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\n\nconst TableHeader = styled(Table.HeaderCell)`\n  background: rgba(80, 87, 99, 0.05) !important;\n  border-radius: 0 !important;\n  color: black !important;\n`;\n\nconst TableCell = styled(Table.Cell)`\n  border-top: ${(props) => props.border} !important;\n  border-bottom: ${(props) => props.border} !important;\n`;\n\nconst Info = styled.p`\n  text-align: left;\n  margin-top: 1rem;\n  margin-left: 1rem;\n`;\n\nconst GenerateMyRow = ({ name, score, rank, display }) => {\n  const color = '#00000066';\n  const border = `1px solid ${color}`;\n  return (\n    <Table.Row style={{ display }}>\n      <TableCell textAlign=\"right\" border={border}>\n        {score}\n      </TableCell>\n      <TableCell border={border}>{name}</TableCell>\n      <TableCell border={border} textAlign=\"center\">\n        {rank}\n      </TableCell>\n    </Table.Row>\n  );\n};\n\nconst GenerateRows = ({ data, myName, teams }) => {\n  const rows = teams.map((x) => {\n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';\n    else if (rank <= 6) background = '#bbbbbb73';\n    else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return <GenerateMyRow name={x.name} score=\"10\" rank={x.rank} />;\n\n    return (\n      <Table.Row style={{ background }}>\n        <Table.Cell textAlign=\"right\" style={{ marginLeft: '3rem !important' }}>\n          points\n        </Table.Cell>\n\n        {x.scores.map((score) => {\n          return (\n            <TableCell textAlign=\"center\">\n              {score}\n              {/* score */}\n            </TableCell>\n          );\n        })}\n\n        <Table.Cell textAlign=\"center\">{x.name}</Table.Cell>\n        <Table.Cell textAlign=\"center\" style={{ borderRight }}>\n          {x.rank}\n        </Table.Cell>\n      </Table.Row>\n    );\n  });\n  return rows;\n};\n\nconst Footer = () => (\n  <>\n    <Info>رتبه‌های 1 الی 20</Info>\n    <Table.Row>\n      <Table.Row>\n        <Pagination\n          defaultActivePage={1}\n          firstItem={null}\n          lastItem={null}\n          secondary\n          totalPages={10}\n          style={{ marginTop: '0.5rem' }}\n        />\n      </Table.Row>\n    </Table.Row>\n  </>\n);\n\nconst Scoreboard = ({ data, milestone, teams, tasks }) => {\n  const myName = 'پویا معینی';\n  const display = data.some((x) => x.first === myName) ? 'none' : '';\n  return (\n    <>\n      {/* <Table selectable size=\"small\" style={{ border: '0 !important' }}>\n        <Table.Header>\n          <Table.Row style={{ height: '4rem !important' }}>\n            <TableHeader textAlign=\"right\">امتیاز</TableHeader>\n            {tasks.map((x) => {\n              return <TableHeader textAlign=\"center\">{x.name}</TableHeader>;\n            })}\n            <TableHeader textAlign=\"center\">نام</TableHeader>\n            <TableHeader textAlign=\"center\">رتبه</TableHeader>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n      <Table>\n        <Table.Body>\n          <GenerateMyRow name={myName} score=\"100\" rank=\"0\" display={display} />\n          <GenerateRows data={data} myName={myName} teams={teams} />\n        </Table.Body>\n      </Table>\n      <Footer /> */}\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n            {tasks.map((x) => {\n              return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n            })}\n            <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <GenerateMyRow name={myName} score=\"100\" rank=\"0\" display={display} />\n          <GenerateRows data={data} myName={myName} teams={teams} />\n        </Table.Body>\n      </Table>\n      <Footer />\n\n    </>\n  );\n};\n\nexport default Scoreboard;\n"]},"metadata":{},"sourceType":"module"}