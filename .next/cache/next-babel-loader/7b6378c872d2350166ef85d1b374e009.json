{"ast":null,"code":"var _jsxFileName = \"/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/tasks/list/desktop.jsx\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport React from 'react';\nimport { Segment, Header as H, Image } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport EllipsisText from 'react-ellipsis-text';\nvar RowSegment = styled(Segment).withConfig({\n  displayName: \"desktop__RowSegment\",\n  componentId: \"p9722i-0\"\n})([\"padding:0 !important;display:flex;justify-content:flex-end;\"]);\nvar Header = styled(H).withConfig({\n  displayName: \"desktop__Header\",\n  componentId: \"p9722i-1\"\n})([\"font-size:35px;font-family:IRANSans,'Open Sans','Helvetica Neue',Arial,Helvetica,sans-serif;margin-right:2rem !important;margin-top:2rem !important;width:75% !important;text-align:right;\"]);\nvar Text = styled.p.withConfig({\n  displayName: \"desktop__Text\",\n  componentId: \"p9722i-2\"\n})([\"margin-bottom:1rem;direction:rtl;\"]);\n\nfunction TasksDesktop(_ref) {\n  var tasks = _ref.tasks;\n  return __jsx(Segment.Group, {\n    basic: true,\n    raised: true,\n    style: {\n      width: '60vw',\n      border: '0 !important',\n      marginLeft: '20vw',\n      display: 'flex',\n      marginBottom: '3rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, _.map(tasks, function (task, i) {\n    var id = task.id,\n        title_fa = task.title_fa,\n        description_fa = task.description_fa,\n        thumbnail = task.thumbnail;\n    return __jsx(\"a\", {\n      key: i,\n      href: \"/dashboard/tasks/\".concat(id, \"/resource\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(RowSegment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, title_fa), __jsx(Text, {\n      style: {\n        fontSize: '1rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(EllipsisText, {\n      text: description_fa,\n      length: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), __jsx(Image, {\n      style: {\n        maxWidth: 200,\n        maxHeight: 200\n      },\n      size: \"small\",\n      src: \"\".concat(thumbnail),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }));\n}\n\nexport default TasksDesktop;","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/components/dashboard/tasks/list/desktop.jsx"],"names":["_","React","Segment","Header","H","Image","styled","EllipsisText","RowSegment","Text","p","TasksDesktop","tasks","width","border","marginLeft","display","marginBottom","map","task","i","id","title_fa","description_fa","thumbnail","fontSize","maxWidth","maxHeight"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAM,IAAIC,CAA5B,EAA+BC,KAA/B,QAA4C,mBAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,IAAMC,UAAU,GAAGF,MAAM,CAACJ,OAAD,CAAT;AAAA;AAAA;AAAA,mEAAhB;AAMA,IAAMC,MAAM,GAAGG,MAAM,CAACF,CAAD,CAAT;AAAA;AAAA;AAAA,kMAAZ;AASA,IAAMK,IAAI,GAAGH,MAAM,CAACI,CAAV;AAAA;AAAA;AAAA,yCAAV;;AAKA,SAASC,YAAT,OAAiC;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/B,SACE,MAAC,OAAD,CAAS,KAAT;AACE,IAAA,KAAK,MADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,cAFH;AAGLC,MAAAA,UAAU,EAAE,MAHP;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLC,MAAAA,YAAY,EAAE;AALT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGjB,CAAC,CAACkB,GAAF,CAAMN,KAAN,EAAa,UAACO,IAAD,EAAOC,CAAP,EAAa;AAAA,QACjBC,EADiB,GAC2BF,IAD3B,CACjBE,EADiB;AAAA,QACbC,QADa,GAC2BH,IAD3B,CACbG,QADa;AAAA,QACHC,cADG,GAC2BJ,IAD3B,CACHI,cADG;AAAA,QACaC,SADb,GAC2BL,IAD3B,CACaK,SADb;AAEzB,WACE;AAAG,MAAA,GAAG,EAAEJ,CAAR;AAAW,MAAA,IAAI,6BAAsBC,EAAtB,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,QAAP,CADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEF,cAApB;AAAoC,MAAA,MAAM,EAAE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,EAOE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAd;AAAiD,MAAA,IAAI,EAAC,OAAtD;AAA8D,MAAA,GAAG,YAAKH,SAAL,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAaD,GAfA,CAXH,CADF;AA8BD;;AAED,eAAeb,YAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { Segment, Header as H, Image } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport EllipsisText from 'react-ellipsis-text';\n\nconst RowSegment = styled(Segment)`\n  padding: 0 !important;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst Header = styled(H)`\n  font-size: 35px;\n  font-family: IRANSans, 'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif;\n  margin-right: 2rem !important;\n  margin-top: 2rem !important;\n  width: 75% !important;\n  text-align: right;\n`;\n\nconst Text = styled.p`\n  margin-bottom: 1rem;\n  direction: rtl;\n`;\n\nfunction TasksDesktop({ tasks }) {\n  return (\n    <Segment.Group\n      basic\n      raised\n      style={{\n        width: '60vw',\n        border: '0 !important',\n        marginLeft: '20vw',\n        display: 'flex',\n        marginBottom: '3rem',\n      }}\n    >\n      {_.map(tasks, (task, i) => {\n        const { id, title_fa, description_fa, thumbnail } = task;\n        return (\n          <a key={i} href={`/dashboard/tasks/${id}/resource`}>\n            <RowSegment>\n              <Header>\n                <Text>{title_fa}</Text>\n                <Text style={{ fontSize: '1rem' }}>\n                  <EllipsisText text={description_fa} length={200} />\n                </Text>\n              </Header>\n              <Image style={{ maxWidth: 200, maxHeight: 200 }} size=\"small\" src={`${thumbnail}`} />\n            </RowSegment>\n          </a>\n        );\n      })}\n    </Segment.Group>\n  );\n}\n\nexport default TasksDesktop;\n"]},"metadata":{},"sourceType":"module"}