{"ast":null,"code":"import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducers from '../reducers';\nimport storeInitialState from './initialState';\n\nfunction makeStore(initialState, {\n  isServer,\n  req,\n  debug,\n  storeKey\n}) {\n  if (isServer) {\n    const store = createStore(reducers, initialState || storeInitialState, applyMiddleware(thunk, logger));\n    return store;\n  }\n\n  const persistConfig = {\n    key: 'root',\n    storage\n  };\n  const store = createStore(persistReducer(persistConfig, reducers), initialState, applyMiddleware(thunk, logger));\n  store.__PERSISTOR = persistStore(store);\n  return store;\n}\n\nexport default makeStore;","map":{"version":3,"sources":["/Users/pooya/Desktop/FrontEndMaster/TheFrontEnd/redux/store/index.js"],"names":["thunk","logger","applyMiddleware","createStore","persistStore","persistReducer","storage","reducers","storeInitialState","makeStore","initialState","isServer","req","debug","storeKey","store","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,iBAAP,MAA8B,gBAA9B;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,GAAZ;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA;AAAxB,CAAjC,EAAqE;AACnE,MAAIH,QAAJ,EAAc;AACZ,UAAMI,KAAK,GAAGZ,WAAW,CACvBI,QADuB,EAEvBG,YAAY,IAAIF,iBAFO,EAGvBN,eAAe,CAACF,KAAD,EAAQC,MAAR,CAHQ,CAAzB;AAKA,WAAOc,KAAP;AACD;;AACD,QAAMC,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,MADe;AAEpBX,IAAAA;AAFoB,GAAtB;AAKA,QAAMS,KAAK,GAAGZ,WAAW,CACvBE,cAAc,CAACW,aAAD,EAAgBT,QAAhB,CADS,EAEvBG,YAFuB,EAGvBR,eAAe,CAACF,KAAD,EAAQC,MAAR,CAHQ,CAAzB;AAMAc,EAAAA,KAAK,CAACG,WAAN,GAAoBd,YAAY,CAACW,KAAD,CAAhC;AAEA,SAAOA,KAAP;AACD;;AAED,eAAeN,SAAf","sourcesContent":["import thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducers from '../reducers';\nimport storeInitialState from './initialState';\n\nfunction makeStore(initialState, { isServer, req, debug, storeKey }) {\n  if (isServer) {\n    const store = createStore(\n      reducers,\n      initialState || storeInitialState,\n      applyMiddleware(thunk, logger),\n    );\n    return store;\n  }\n  const persistConfig = {\n    key: 'root',\n    storage,\n  };\n\n  const store = createStore(\n    persistReducer(persistConfig, reducers),\n    initialState,\n    applyMiddleware(thunk, logger),\n  );\n\n  store.__PERSISTOR = persistStore(store);\n\n  return store;\n}\n\nexport default makeStore;\n"]},"metadata":{},"sourceType":"module"}