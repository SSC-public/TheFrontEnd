{"ast":null,"code":"import axios from 'axios';\nimport BASE_ADDR from '.';\nconst PROFILE_API = `${BASE_ADDR}/accounts/profile`;\nconst PASSWORD_RESET_API = `${BASE_ADDR}/accounts/password/change/`;\nexport function passwordUpdateAPI(data, token) {\n  return axios.post(PASSWORD_RESET_API, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\nexport function profileUpdateAPI(data, token) {\n  return axios.put(PROFILE_API, data, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\nexport function profileAPI(token) {\n  return axios.get(PROFILE_API, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\nconst TASK = id => `${BASE_ADDR}/resources/${id}`;\n\nconst TASK_LIST = `${BASE_ADDR}/resources`;\nexport function taskListAPI(token) {\n  return axios.get(TASK_LIST, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\nexport function taskAPI(id, token) {\n  return axios.get(TASK(id), {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\n\nconst CONTEST = id => `${BASE_ADDR}/contest/${id}`;\n\nconst MILESTONE = (contestID, milestoneID) => `${BASE_ADDR}/contest/${contestID}/${milestoneID}/`;\n\nexport function contestAPI(contestId, token) {\n  return axios.get(CONTEST(contestId), {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}\nexport function milestoneAPI(contestID, milestoneID, token) {\n  return axios.get(MILESTONE(contestID, milestoneID), {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/redux/api/dashboard.js"],"names":["axios","BASE_ADDR","PROFILE_API","PASSWORD_RESET_API","passwordUpdateAPI","data","token","post","headers","Authorization","profileUpdateAPI","put","profileAPI","get","TASK","id","TASK_LIST","taskListAPI","taskAPI","CONTEST","MILESTONE","contestID","milestoneID","contestAPI","contestId","milestoneAPI"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,GAAtB;AAEA,MAAMC,WAAW,GAAI,GAAED,SAAU,mBAAjC;AACA,MAAME,kBAAkB,GAAI,GAAEF,SAAU,4BAAxC;AAEA,OAAO,SAASG,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AAC7C,SAAON,KAAK,CAACO,IAAN,CAAWJ,kBAAX,EAA+BE,IAA/B,EAAqC;AAC1CG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADiC,GAArC,CAAP;AAKD;AAED,OAAO,SAASI,gBAAT,CAA0BL,IAA1B,EAAgCC,KAAhC,EAAuC;AAC5C,SAAON,KAAK,CAACW,GAAN,CAAUT,WAAV,EAAuBG,IAAvB,EAA6B;AAClCG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADyB,GAA7B,CAAP;AAKD;AAED,OAAO,SAASM,UAAT,CAAoBN,KAApB,EAA2B;AAChC,SAAON,KAAK,CAACa,GAAN,CAAUX,WAAV,EAAuB;AAC5BM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADmB,GAAvB,CAAP;AAKD;;AAED,MAAMQ,IAAI,GAAIC,EAAD,IAAS,GAAEd,SAAU,cAAac,EAAG,EAAlD;;AACA,MAAMC,SAAS,GAAI,GAAEf,SAAU,YAA/B;AAEA,OAAO,SAASgB,WAAT,CAAqBX,KAArB,EAA4B;AACjC,SAAON,KAAK,CAACa,GAAN,CAAUG,SAAV,EAAqB;AAC1BR,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADiB,GAArB,CAAP;AAKD;AAED,OAAO,SAASY,OAAT,CAAiBH,EAAjB,EAAqBT,KAArB,EAA4B;AACjC,SAAON,KAAK,CAACa,GAAN,CAAUC,IAAI,CAACC,EAAD,CAAd,EAAoB;AACzBP,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADgB,GAApB,CAAP;AAKD;;AAED,MAAMa,OAAO,GAAIJ,EAAD,IAAS,GAAEd,SAAU,YAAWc,EAAG,EAAnD;;AACA,MAAMK,SAAS,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA6B,GAAErB,SAAU,YAAWoB,SAAU,IAAGC,WAAY,GAA/F;;AAEA,OAAO,SAASC,UAAT,CAAoBC,SAApB,EAA+BlB,KAA/B,EAAsC;AAC3C,SAAON,KAAK,CAACa,GAAN,CAAUM,OAAO,CAACK,SAAD,CAAjB,EAA8B;AACnChB,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AAD0B,GAA9B,CAAP;AAKD;AAED,OAAO,SAASmB,YAAT,CAAsBJ,SAAtB,EAAiCC,WAAjC,EAA8ChB,KAA9C,EAAqD;AAC1D,SAAON,KAAK,CAACa,GAAN,CAAUO,SAAS,CAACC,SAAD,EAAYC,WAAZ,CAAnB,EAA6C;AAClDd,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADyC,GAA7C,CAAP;AAKD","sourcesContent":["import axios from 'axios';\nimport BASE_ADDR from '.';\n\nconst PROFILE_API = `${BASE_ADDR}/accounts/profile`;\nconst PASSWORD_RESET_API = `${BASE_ADDR}/accounts/password/change/`;\n\nexport function passwordUpdateAPI(data, token) {\n  return axios.post(PASSWORD_RESET_API, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function profileUpdateAPI(data, token) {\n  return axios.put(PROFILE_API, data, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function profileAPI(token) {\n  return axios.get(PROFILE_API, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nconst TASK = (id) => `${BASE_ADDR}/resources/${id}`;\nconst TASK_LIST = `${BASE_ADDR}/resources`;\n\nexport function taskListAPI(token) {\n  return axios.get(TASK_LIST, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function taskAPI(id, token) {\n  return axios.get(TASK(id), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nconst CONTEST = (id) => `${BASE_ADDR}/contest/${id}`;\nconst MILESTONE = (contestID, milestoneID) => `${BASE_ADDR}/contest/${contestID}/${milestoneID}/`;\n\nexport function contestAPI(contestId, token) {\n  return axios.get(CONTEST(contestId), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n\nexport function milestoneAPI(contestID, milestoneID, token) {\n  return axios.get(MILESTONE(contestID, milestoneID), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}