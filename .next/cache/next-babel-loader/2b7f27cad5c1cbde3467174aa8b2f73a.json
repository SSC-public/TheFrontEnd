{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dimmer } from 'semantic-ui-react';\nimport { ClipLoader } from 'react-spinners';\nimport { authorizeAction } from \"../../redux/actions/auth\";\n\nfunction getSSRToken(headerCookies) {\n  let token = '';\n\n  _.forEach(_.split(headerCookies, ' '), headerCookie => {\n    const key = headerCookie.split('=')[0];\n\n    const value = _.replace(headerCookie.split('=')[1], ';', '');\n\n    if (key === 'token' && value !== '%5Bobject%20Object%5D') {\n      token = value;\n    }\n  });\n\n  return token;\n}\n\nfunction withAuth(loggedIn) {\n  return WrappedComponent => {\n    class Wrapper extends Component {\n      static async getInitialProps(ctx) {\n        const {\n          store,\n          isServer,\n          req\n        } = ctx;\n        const token = isServer ? getSSRToken(req.headers.cookie) : cookie.get('token');\n        await store.dispatch(authorizeAction(token));\n        const pageProps = (await WrappedComponent.getInitialProps) && (await WrappedComponent.getInitialProps(ctx, token));\n        return _objectSpread({}, pageProps, {\n          isServer\n        });\n      }\n\n      render() {\n        const {\n          page,\n          auth\n        } = this.props;\n        const pageLoading = page.loading || auth.authorized && !loggedIn || !auth.authorized && loggedIn;\n\n        if (_.isUndefined(loggedIn)) {\n          return __jsx(WrappedComponent, this.props);\n        }\n\n        if (!auth.authorized && loggedIn) {\n          Router.push('/login', '/login', {\n            shallow: false\n          });\n        }\n\n        if (auth.authorized && !loggedIn) {\n          Router.push('/dashboard/tasks', '/dashboard/tasks', {\n            shallow: false\n          });\n        }\n\n        return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"DataDays 2020\")), __jsx(Dimmer, {\n          active: pageLoading\n        }, __jsx(ClipLoader, {\n          size: 75,\n          color: \"#fff\",\n          loading: pageLoading\n        })), __jsx(WrappedComponent, this.props));\n      }\n\n    }\n\n    function mapStateToProps(state, ownProps) {\n      const {\n        page,\n        auth\n      } = state;\n      return {\n        page,\n        auth\n      };\n    }\n\n    return connect(mapStateToProps, null)(Wrapper);\n  };\n}\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}