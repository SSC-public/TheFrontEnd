{"ast":null,"code":"var _jsxFileName = \"/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\nconst TableHeader = styled(Table.HeaderCell).withConfig({\n  displayName: \"laptab__TableHeader\",\n  componentId: \"qvtjrt-0\"\n})([\"background:rgba(80,87,99,0.05) !important;border-radius:0 !important;color:black !important;\"]);\nconst TableCell = styled(Table.Cell).withConfig({\n  displayName: \"laptab__TableCell\",\n  componentId: \"qvtjrt-1\"\n})([\"border-top:\", \" !important;border-bottom:\", \" !important;\"], props => props.border, props => props.border);\nconst Info = styled.p.withConfig({\n  displayName: \"laptab__Info\",\n  componentId: \"qvtjrt-2\"\n})([\"text-align:left;margin-top:1rem;margin-left:1rem;\"]);\n\nconst GenerateMyRow = ({\n  team\n}) => {\n  const color = '#00000066';\n  const border = `3px solid ${color}`;\n  return __jsx(Table.Row, {\n    warning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Table.Cell, {\n    textAlign: \"center\",\n    style: {\n      marginLeft: '3rem !important'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, team.total_score), team.scores.map(score => {\n    return __jsx(TableCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, score);\n  }), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, team.name), __jsx(Table.Cell, {\n    textAlign: \"center\",\n    border: border,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, team.rank));\n};\n\nconst GenerateRows = ({\n  myName,\n  teams\n}) => {\n  const rows = teams.map(x => {\n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';else if (rank <= 6) background = '#bbbbbb73';else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return __jsx(GenerateMyRow, {\n      team: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n    return __jsx(Table.Row, {\n      style: {\n        background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        marginLeft: '3rem !important'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, x.total_score), x.scores.map(score => {\n      return __jsx(TableCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, score);\n    }), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, x.name), __jsx(Table.Cell, {\n      textAlign: \"center\",\n      style: {\n        borderRight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, x.rank));\n  });\n  return rows;\n};\n\nconst onChange = (e, pageInfo) => {\n  console.log(\"event:\", e);\n  console.log(\"pageInfo:\", pageInfo);\n  console.log(\"active page:\", pageInfo.activePage);\n};\n\nconst Footer = props => {\n  const numberOfTeams = props.teams.length;\n  const pageNumbers = numberOfTeams / 2;\n  console.log(\"_________number of teams:\", numberOfTeams);\n  return __jsx(React.Fragment, null, __jsx(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u0631\\u062A\\u0628\\u0647\\u200C\\u0647\\u0627\\u06CC 1 \\u0627\\u0644\\u06CC 2\"), __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Pagination, {\n    defaultActivePage: 1,\n    firstItem: null,\n    lastItem: null,\n    secondary: true,\n    defaultActivePage: pageNumbers / 2,\n    totalPages: pageNumbers,\n    style: {\n      marginTop: '0.5rem'\n    },\n    onPageChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))));\n};\n\nconst Scoreboard = ({\n  milestone,\n  teams,\n  tasks\n}) => {\n  const myName = 'team2';\n  return __jsx(React.Fragment, null, __jsx(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"\\u0627\\u0645\\u062A\\u06CC\\u0627\\u0632\"), tasks.map(x => {\n    return __jsx(Table.HeaderCell, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, x.name);\n  }), __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\u0646\\u0627\\u0645\"), __jsx(Table.HeaderCell, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"\\u0631\\u062A\\u0628\\u0647\"))), __jsx(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(GenerateRows, {\n    myName: myName,\n    teams: teams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))), __jsx(Footer, {\n    teams: teams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }));\n};\n\nexport default Scoreboard;","map":{"version":3,"sources":["/Users/bahar/Desktop/TheFrontEnd/components/dashboard/scoreboard/laptab.jsx"],"names":["React","Table","Pagination","Segment","TableRow","Tab","Header","Menu","Icon","styled","width","TableHeader","HeaderCell","TableCell","Cell","props","border","Info","p","GenerateMyRow","team","color","marginLeft","total_score","scores","map","score","name","rank","GenerateRows","myName","teams","rows","x","background","borderRight","onChange","e","pageInfo","console","log","activePage","Footer","numberOfTeams","length","pageNumbers","marginTop","Scoreboard","milestone","tasks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Pagination, Segment, TableRow, Tab, Header, Menu, Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { width } from 'dom-helpers';\n\nconst TableHeader = styled(Table.HeaderCell)`\n  background: rgba(80, 87, 99, 0.05) !important;\n  border-radius: 0 !important;\n  color: black !important;\n`;\n\nconst TableCell = styled(Table.Cell)`\n  border-top: ${(props) => props.border} !important;\n  border-bottom: ${(props) => props.border} !important;\n`;\n\nconst Info = styled.p`\n  text-align: left;\n  margin-top: 1rem;\n  margin-left: 1rem;\n`;\n\nconst GenerateMyRow = ({ team }) => {\n  const color = '#00000066';\n  const border = `3px solid ${color}`;\n   return (    \n     <Table.Row warning>\n         <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n           {team.total_score}\n         </Table.Cell>\n\n         {team.scores.map((score) => {\n           return (\n             <TableCell textAlign=\"center\">\n               {score}\n             </TableCell>\n           );\n         })}\n\n         <Table.Cell textAlign=\"center\" border={border}>{team.name}</Table.Cell>\n         <Table.Cell textAlign=\"center\" border={border}>\n           {team.rank}\n         </Table.Cell>\n       </Table.Row>\n   );\n}\n\n\nconst GenerateRows = ({ myName, teams }) => {\n  const rows = teams.map((x) => {\n  \n    let background = '#f8f8fa';\n    const rank = x.rank;\n    if (rank <= 3) background = '#fed76673';\n    else if (rank <= 6) background = '#bbbbbb73';\n    else if (rank <= 9) background = '#cd7f3273';\n    const borderRight = `3px solid ${background} !important`;\n    if (x.name === myName) return <GenerateMyRow team={x} />;\n\n    return (\n      <Table.Row style={{ background }}>\n        <Table.Cell textAlign=\"center\" style={{ marginLeft: '3rem !important' }}>\n           {x.total_score}\n         </Table.Cell>\n\n        {x.scores.map((score) => {\n\n          return <TableCell textAlign=\"center\">{score}</TableCell>;\n\n        })}\n\n        <Table.Cell textAlign=\"center\">{x.name}</Table.Cell>\n        <Table.Cell textAlign=\"center\" style={{ borderRight }}>\n          {x.rank}\n        </Table.Cell>\n      </Table.Row>\n    );\n  });\n  return rows;\n};\n\n\n\nconst onChange = (e, pageInfo) => {\n  console.log(\"event:\", e)\n  console.log(\"pageInfo:\", pageInfo)\n  console.log(\"active page:\", pageInfo.activePage)\n  \n}\n\nconst Footer = (props) => {\n  const numberOfTeams = props.teams.length;\n  const pageNumbers = numberOfTeams / 2;\n  console.log(\"_________number of teams:\", numberOfTeams)\n\n  return (\n    <>\n      <Info>رتبه‌های 1 الی 2</Info>\n\n      <Table.Row>\n        <Table.Row>\n          <Pagination\n            defaultActivePage={1}\n            firstItem={null}\n            lastItem={null}\n            secondary\n            defaultActivePage={pageNumbers / 2}\n            totalPages={pageNumbers}\n            style={{ marginTop: '0.5rem' }}\n            onPageChange={onChange}\n          />\n        </Table.Row>\n      </Table.Row>\n    </>\n  );\n};\n\nconst Scoreboard = ({ milestone, teams, tasks }) => {\n  \n\n  const myName = 'team2';\n\n  return (\n    <>\n\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell textAlign=\"center\">امتیاز</Table.HeaderCell>\n            {tasks.map((x) => {\n              return <Table.HeaderCell textAlign=\"center\">{x.name}</Table.HeaderCell>;\n            })}\n            <Table.HeaderCell textAlign=\"center\">نام</Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\">رتبه</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <GenerateRows myName={myName} teams={teams} />\n        </Table.Body>\n      </Table>\n\n      <Footer teams={teams} />\n\n\n    </>\n  );\n};\n\nexport default Scoreboard;\n"]},"metadata":{},"sourceType":"module"}