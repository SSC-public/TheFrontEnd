{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/components/dashboard/resources/parse.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table, Image, Header, List, Divider } from 'semantic-ui-react';\nimport htmlParser from 'react-markdown/plugins/html-parser';\nexport default htmlParser({\n  isValidNode: function isValidNode(node) {\n    return true;\n  },\n  processingInstructions: [{\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'div';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        dir: \"RTL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'font';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"font\", _extends({}, node.attribs, {\n        style: {\n          lineHeight: 1.5\n        },\n        face: \"IRANSans\",\n        size: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'h1';\n    },\n    processNode: function processNode(node) {\n      return __jsx(Header, {\n        as: \"h1\",\n        style: {\n          fontSize: '3rem',\n          lineHeight: 1.5,\n          marginBottom: '3rem',\n          direction: 'rtl'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, node.children[0].data);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'h2';\n    },\n    processNode: function processNode(node) {\n      return __jsx(Header, {\n        as: \"h2\",\n        style: {\n          fontSize: '2.25rem',\n          lineHeight: 1.5,\n          marginBottom: '3rem',\n          direction: 'rtl'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, node.children[0].data);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'h3';\n    },\n    processNode: function processNode(node) {\n      return __jsx(Header, {\n        as: \"h3\",\n        style: {\n          fontSize: '2rem',\n          lineHeight: 1.5,\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, node.children[0].data);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'h4';\n    },\n    processNode: function processNode(node) {\n      return __jsx(Header, {\n        as: \"h4\",\n        style: {\n          fontSize: '1.75rem',\n          lineHeight: 1.5,\n          marginBottom: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, node.children[0].data);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'figure';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"figure\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'figcaption';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"figcaption\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'img';\n    },\n    processNode: function processNode(node) {\n      return __jsx(Image, {\n        style: {\n          margin: '3rem auto'\n        },\n        src: node.attribs.src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'table';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"div\", {\n        style: {\n          marginBottom: '3rem',\n          width: '100%',\n          overflowX: 'scroll'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(Table, {\n        celled: true,\n        striped: true,\n        stackable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, children));\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'thead';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'tbody';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'tr';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'th';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'td';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'ul';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"div\", {\n        style: {\n          margin: '2rem'\n        },\n        dir: \"RTL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, __jsx(List, {\n        bulleted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, children));\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'ol';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"div\", {\n        style: {\n          margin: '2rem'\n        },\n        dir: \"RTL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, __jsx(List, {\n        ordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, children));\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'li';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'hr';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'br';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      });\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'code';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"code\", {\n        style: {\n          backgroundColor: '#eeeeee',\n          direction: 'ltr'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'p';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"span\", {\n        style: {\n          fontSize: '1.5rem',\n          lineHeight: 1.5,\n          marginBottom: '0.75rem',\n          direction: 'rtl'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'a';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"a\", {\n        href: node.attribs.href,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'blockquote';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"blockquote\", {\n        style: {\n          color: 'grey',\n          borderRight: '5px solid #e0e1e2',\n          paddingRight: '2rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'strong';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.name && node.name === 'em';\n    },\n    processNode: function processNode(node, children) {\n      return __jsx(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, children);\n    }\n  }, {\n    shouldProcessNode: function shouldProcessNode(node) {\n      return node.type && node.type === 'text';\n    },\n    processNode: function processNode(node) {\n      if (!node.parent || node.parent.tagName === 'div' || node.parent.tagName === 'font') {\n        return __jsx(\"span\", {\n          style: {\n            fontSize: '1.5rem',\n            lineHeight: 1.5,\n            marginBottom: '0.75rem',\n            direction: 'rtl'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, node.nodeValue);\n      }\n\n      return __jsx(React.Fragment, null, node.nodeValue);\n    }\n  }]\n});","map":{"version":3,"sources":["/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/components/dashboard/resources/parse.jsx"],"names":["React","Table","Image","Header","List","Divider","htmlParser","isValidNode","node","processingInstructions","shouldProcessNode","name","processNode","children","marginBottom","attribs","lineHeight","fontSize","direction","data","textAlign","margin","src","width","overflowX","backgroundColor","href","color","borderRight","paddingRight","type","parent","tagName","nodeValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Image, Header, List, Divider } from 'semantic-ui-react';\nimport htmlParser from 'react-markdown/plugins/html-parser';\n\nexport default htmlParser({\n  isValidNode: (node) => true,\n  processingInstructions: [\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'div';\n      },\n      processNode(node, children) {\n        return (\n          <div style={{ marginBottom: '1rem' }} dir=\"RTL\">\n            {children}\n          </div>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'font';\n      },\n      processNode(node, children) {\n        return (\n          <font {...node.attribs} style={{ lineHeight: 1.5 }} face=\"IRANSans\" size=\"5\">\n            {children}\n          </font>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'h1';\n      },\n      processNode(node) {\n        return (\n          <Header\n            as=\"h1\"\n            style={{ fontSize: '3rem', lineHeight: 1.5, marginBottom: '3rem', direction: 'rtl' }}\n          >\n            {node.children[0].data}\n          </Header>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'h2';\n      },\n      processNode(node) {\n        return (\n          <Header\n            as=\"h2\"\n            style={{ fontSize: '2.25rem', lineHeight: 1.5, marginBottom: '3rem', direction: 'rtl' }}\n          >\n            {node.children[0].data}\n          </Header>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'h3';\n      },\n      processNode(node) {\n        return (\n          <Header as=\"h3\" style={{ fontSize: '2rem', lineHeight: 1.5, marginBottom: '1rem' }}>\n            {node.children[0].data}\n          </Header>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'h4';\n      },\n      processNode(node) {\n        return (\n          <Header as=\"h4\" style={{ fontSize: '1.75rem', lineHeight: 1.5, marginBottom: '1rem' }}>\n            {node.children[0].data}\n          </Header>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'figure';\n      },\n      processNode(node, children) {\n        return <figure style={{ textAlign: 'center' }}>{children}</figure>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'figcaption';\n      },\n      processNode(node, children) {\n        return <figcaption style={{ textAlign: 'center' }}>{children}</figcaption>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'img';\n      },\n      processNode(node) {\n        return <Image style={{ margin: '3rem auto' }} src={node.attribs.src} />;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'table';\n      },\n      processNode(node, children) {\n        return (\n          <div style={{ marginBottom: '3rem', width: '100%', overflowX: 'scroll' }}>\n            <Table celled striped stackable={false}>\n              {children}\n            </Table>\n          </div>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'thead';\n      },\n      processNode(node, children) {\n        return <Table.Header>{children}</Table.Header>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'tbody';\n      },\n      processNode(node, children) {\n        return <Table.Body>{children}</Table.Body>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'tr';\n      },\n      processNode(node, children) {\n        return <Table.Row>{children}</Table.Row>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'th';\n      },\n      processNode(node, children) {\n        return <Table.HeaderCell>{children}</Table.HeaderCell>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'td';\n      },\n      processNode(node, children) {\n        return <Table.Cell>{children}</Table.Cell>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'ul';\n      },\n      processNode(node, children) {\n        return (\n          <div style={{ margin: '2rem' }} dir=\"RTL\">\n            <List bulleted>{children}</List>\n          </div>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'ol';\n      },\n      processNode(node, children) {\n        return (\n          <div style={{ margin: '2rem' }} dir=\"RTL\">\n            <List ordered>{children}</List>\n          </div>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'li';\n      },\n      processNode(node, children) {\n        return <List.Item>{children}</List.Item>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'hr';\n      },\n      processNode(node, children) {\n        return <Divider />;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'br';\n      },\n      processNode(node, children) {\n        return <br />;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'code';\n      },\n      processNode(node, children) {\n        return <code style={{ backgroundColor: '#eeeeee', direction: 'ltr' }}>{children}</code>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'p';\n      },\n      processNode(node, children) {\n        return (\n          <span\n            style={{\n              fontSize: '1.5rem',\n              lineHeight: 1.5,\n              marginBottom: '0.75rem',\n              direction: 'rtl',\n            }}\n          >\n            {children}\n          </span>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'a';\n      },\n      processNode(node, children) {\n        return (\n          <a href={node.attribs.href} target=\"_blank\" rel=\"noopener noreferrer\">\n            {children}\n          </a>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'blockquote';\n      },\n      processNode(node, children) {\n        return (\n          <blockquote\n            style={{ color: 'grey', borderRight: '5px solid #e0e1e2', paddingRight: '2rem' }}\n          >\n            {children}\n          </blockquote>\n        );\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'strong';\n      },\n      processNode(node, children) {\n        return <strong>{children}</strong>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.name && node.name === 'em';\n      },\n      processNode(node, children) {\n        return <em>{children}</em>;\n      },\n    },\n    {\n      shouldProcessNode(node) {\n        return node.type && node.type === 'text';\n      },\n      processNode(node) {\n        if (!node.parent || node.parent.tagName === 'div' || node.parent.tagName === 'font') {\n          return (\n            <span\n              style={{\n                fontSize: '1.5rem',\n                lineHeight: 1.5,\n                marginBottom: '0.75rem',\n                direction: 'rtl',\n              }}\n            >\n              {node.nodeValue}\n            </span>\n          );\n        }\n        return <>{node.nodeValue}</>;\n      },\n    },\n  ],\n});\n"]},"metadata":{},"sourceType":"module"}