{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/pages/dashboard/tasks/[id]/resource.jsx\";\nvar __jsx = React.createElement;\nimport _ from 'lodash';\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withAuth from \"../../../../components/global/withAuth\";\nimport Layout from \"../../../../components/dashboard/layout\";\nimport Resources from \"../../../../components/dashboard/resources\";\nimport NotFound from \"../../../../components/dashboard/notFound\";\nimport { loadTaskAction } from \"../../../../redux/actions/tasks\";\n\nvar ResourcesPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResourcesPage, _Component);\n\n  function ResourcesPage() {\n    _classCallCheck(this, ResourcesPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResourcesPage).apply(this, arguments));\n  }\n\n  _createClass(ResourcesPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          load = _this$props.load,\n          id = _this$props.id;\n      load(id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tasks = this.props.tasks;\n      console.log(tasks.current);\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"DataDays 2020\")), __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, _.isEmpty(tasks.current) ? __jsx(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }) : __jsx(Resources, {\n        content: tasks.current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", {\n                  id: ctx.query.id\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ResourcesPage;\n}(Component);\n\nfunction mapStateToProps(state, ownProps) {\n  var tasks = state.tasks;\n  return {\n    tasks: tasks\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    load: function load(id) {\n      return dispatch(loadTaskAction(id));\n    }\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(ResourcesPage));","map":{"version":3,"sources":["/Users/parsa/Desktop/everything/projects/ongoing/DataDays/TheFrontEnd/pages/dashboard/tasks/[id]/resource.jsx"],"names":["_","Head","React","Component","connect","withAuth","Layout","Resources","NotFound","loadTaskAction","ResourcesPage","props","load","id","tasks","console","log","current","isEmpty","ctx","query","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,QAAP,MAAqB,2CAArB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;IAEMC,a;;;;;;;;;;;;;wCAKgB;AAAA,wBACG,KAAKC,KADR;AAAA,UACVC,IADU,eACVA,IADU;AAAA,UACJC,EADI,eACJA,EADI;AAElBD,MAAAA,IAAI,CAACC,EAAD,CAAJ;AACD;;;6BAEQ;AAAA,UACCC,KADD,GACW,KAAKH,KADhB,CACCG,KADD;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA,aACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjB,CAAC,CAACkB,OAAF,CAAUJ,KAAK,CAACG,OAAhB,IAA2B,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,GAA0C,MAAC,SAAD;AAAW,QAAA,OAAO,EAAEH,KAAK,CAACG,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD7C,CAJF,CADF;AAUD;;;;;;gDAtB4BE,G;;;;;iDACpB;AAAEN,kBAAAA,EAAE,EAAEM,GAAG,CAACC,KAAJ,CAAUP;AAAhB,iB;;;;;;;;;;;;;;;;;;;EAFiBV,S;;AA0B5B,SAASkB,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AAAA,MAChCT,KADgC,GACtBQ,KADsB,CAChCR,KADgC;AAExC,SAAO;AACLA,IAAAA,KAAK,EAALA;AADK,GAAP;AAGD;;AAED,SAASU,kBAAT,CAA4BC,QAA5B,EAAsCF,QAAtC,EAAgD;AAC9C,SAAO;AACLX,IAAAA,IAAI,EAAE,cAACC,EAAD;AAAA,aAAQY,QAAQ,CAAChB,cAAc,CAACI,EAAD,CAAf,CAAhB;AAAA;AADD,GAAP;AAGD;;AAED,eAAeR,QAAQ,CAAC,IAAD,CAAR,CAAeD,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,aAA7C,CAAf,CAAf","sourcesContent":["import _ from 'lodash';\nimport Head from 'next/head';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withAuth from '~/components/global/withAuth';\nimport Layout from '~/components/dashboard/layout';\nimport Resources from '~/components/dashboard/resources';\nimport NotFound from '~/components/dashboard/notFound';\nimport { loadTaskAction } from '~/redux/actions/tasks';\n\nclass ResourcesPage extends Component {\n  static async getInitialProps(ctx) {\n    return { id: ctx.query.id };\n  }\n\n  componentDidMount() {\n    const { load, id } = this.props;\n    load(id);\n  }\n\n  render() {\n    const { tasks } = this.props;\n    console.log(tasks.current);\n    return (\n      <>\n        <Head>\n          <title>DataDays 2020</title>\n        </Head>\n        <Layout>\n          {_.isEmpty(tasks.current) ? <NotFound /> : <Resources content={tasks.current} />}\n        </Layout>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { tasks } = state;\n  return {\n    tasks,\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    load: (id) => dispatch(loadTaskAction(id)),\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(ResourcesPage));\n"]},"metadata":{},"sourceType":"module"}