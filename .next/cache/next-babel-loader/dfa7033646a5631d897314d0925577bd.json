{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport produce from 'immer';\nimport validator from 'validator';\nimport initialState from '../store/initialState';\nimport { SIGNUP_CLEAR, SIGNUP_SUCCESS, SIGNUP_FAIL, SIGNUP_CHECK } from '../actions/signup';\n\nfunction signupClearReducer(state = initialState.auth, action) {\n  return produce(state, draft => {\n    draft.success = false;\n    draft.errors = {};\n    return draft;\n  });\n}\n\nfunction signupSuccessReducer(state = initialState.signup, action) {\n  return produce(state, draft => {\n    draft.success = true;\n    draft.error = {};\n    return draft;\n  });\n}\n\nfunction signupFailReducer(state = initialState.signup, action) {\n  return produce(state, draft => {\n    const {\n      errors\n    } = action.payload;\n    draft.success = false;\n    draft.errors = errors;\n    return draft;\n  });\n}\n\nfunction signupChekerReducer(state = initialState.signup, action) {\n  return produce(state, draft => {\n    const {\n      fields\n    } = action.payload;\n\n    const checkFields = _objectSpread({}, fields, {}, fields.profile);\n\n    _.forEach(checkFields, (value, key) => {\n      if (value === '') {\n        draft.errors[key] = 'فیلد خالی است.';\n      }\n    });\n\n    if (!validator.isEmail(checkFields.email)) {\n      draft.errors.email = 'ایمیل غیرمعتبر است.';\n    }\n\n    if (checkFields.password_1 !== checkFields.password_2) {\n      draft.errors.password_1 = 'گذرواژه‌ها یکسان نیستند.';\n      draft.errors.password_2 = 'گذرواژه‌ها یکسان نیستند.';\n    }\n\n    return draft;\n  });\n}\n\nexport default function signupReducers(state = initialState.signup, action) {\n  switch (action.type) {\n    case SIGNUP_CLEAR:\n      return signupClearReducer(state, action);\n\n    case SIGNUP_FAIL:\n      return signupFailReducer(state, action);\n\n    case SIGNUP_SUCCESS:\n      return signupSuccessReducer(state, action);\n\n    case SIGNUP_CHECK:\n      return signupChekerReducer(state, action);\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}