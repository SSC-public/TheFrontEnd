{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Saba/Desktop/Front2/TheFrontEnd/pages/dashboard/profile.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Container from \"../../components/dashboard/profile/Container\";\nimport { profileAPI } from \"../../redux/api/dashboard\";\nimport withAuth from \"../../components/global/withAuth\";\nimport { connect } from 'react-redux';\nimport { profileUpdateAction, profileClearAction, passwordUpdateAction } from \"../../redux/actions/profile\";\nimport Layout from \"../../components/global/layout\";\n\nvar ProfilePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfilePage, _Component);\n\n  function ProfilePage() {\n    _classCallCheck(this, ProfilePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfilePage).apply(this, arguments));\n  }\n\n  _createClass(ProfilePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var clear = this.props.clear;\n      clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          profileData = _this$props.profileData,\n          token = _this$props.token,\n          update = _this$props.update,\n          profile = _this$props.profile,\n          clear = _this$props.clear,\n          password_update = _this$props.password_update;\n      return __jsx(React.Fragment, null, __jsx(Layout, {\n        token: token,\n        hasNavbar: true,\n        hasFooter: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(Container, {\n        profile: profile,\n        profileData: profileData,\n        token: token,\n        update: update,\n        clear: clear,\n        password_update: password_update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), \";\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(ctx, token) {\n        var res, profileData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return profileAPI(token);\n\n              case 2:\n                res = _context.sent;\n                profileData = res.data;\n                return _context.abrupt(\"return\", {\n                  profileData: profileData,\n                  token: token\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x, _x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ProfilePage;\n}(Component);\n\nfunction mapStateToProps(state, ownProps) {\n  var profile = state.profile;\n  return {\n    profile: profile\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    update: function update(fields, token) {\n      dispatch(profileUpdateAction(fields, token));\n    },\n    password_update: function password_update(fields, token) {\n      dispatch(passwordUpdateAction(fields, token));\n    },\n    clear: function clear() {\n      dispatch(profileClearAction());\n    }\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(ProfilePage));","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/pages/dashboard/profile.jsx"],"names":["React","Component","Container","profileAPI","withAuth","connect","profileUpdateAction","profileClearAction","passwordUpdateAction","Layout","ProfilePage","clear","props","profileData","token","update","profile","password_update","ctx","res","data","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch","fields"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,8CAAtB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,oBAHF,QAIO,6BAJP;AAKA,OAAOC,MAAP,MAAmB,gCAAnB;;IAEMC,W;;;;;;;;;;;;;wCAOgB;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAElBA,MAAAA,KAAK;AACN;;;6BAEQ;AAAA,wBACiE,KAAKC,KADtE;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,KADd,eACcA,KADd;AAAA,UACqBC,MADrB,eACqBA,MADrB;AAAA,UAC6BC,OAD7B,eAC6BA,OAD7B;AAAA,UACsCL,KADtC,eACsCA,KADtC;AAAA,UAC6CM,eAD7C,eAC6CA,eAD7C;AAGP,aACE,4BACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH,KAAf;AAAsB,QAAA,SAAS,MAA/B;AAAgC,QAAA,SAAS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AACE,QAAA,OAAO,EAAEE,OADX;AAEE,QAAA,WAAW,EAAEH,WAFf;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,KAAK,EAAEJ,KALT;AAME,QAAA,eAAe,EAAEM,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,MADF,CADF;AAeD;;;;;;gDA7B4BC,G,EAAKJ,K;;;;;;;uBACdX,UAAU,CAACW,KAAD,C;;;AAAtBK,gBAAAA,G;AACAN,gBAAAA,W,GAAcM,GAAG,CAACC,I;iDACjB;AAAEP,kBAAAA,WAAW,EAAXA,WAAF;AAAeC,kBAAAA,KAAK,EAALA;AAAf,iB;;;;;;;;;;;;;;;;;;;EAJeb,S;;AAiC1B,SAASoB,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0C;AAAA,MAChCP,OADgC,GACpBM,KADoB,CAChCN,OADgC;AAExC,SAAO;AACLA,IAAAA,OAAO,EAAPA;AADK,GAAP;AAGD;;AAED,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsCF,QAAtC,EAAgD;AAC9C,SAAO;AACLR,IAAAA,MAAM,EAAE,gBAACW,MAAD,EAASZ,KAAT,EAAmB;AACzBW,MAAAA,QAAQ,CAACnB,mBAAmB,CAACoB,MAAD,EAASZ,KAAT,CAApB,CAAR;AACD,KAHI;AAILG,IAAAA,eAAe,EAAE,yBAACS,MAAD,EAASZ,KAAT,EAAmB;AAClCW,MAAAA,QAAQ,CAACjB,oBAAoB,CAACkB,MAAD,EAASZ,KAAT,CAArB,CAAR;AACD,KANI;AAOLH,IAAAA,KAAK,EAAE,iBAAM;AACXc,MAAAA,QAAQ,CAAClB,kBAAkB,EAAnB,CAAR;AACD;AATI,GAAP;AAWD;;AAED,eAAeH,QAAQ,CAAC,IAAD,CAAR,CAAeC,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,WAA7C,CAAf,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Container from '~/components/dashboard/profile/Container';\nimport { profileAPI } from '~/redux/api/dashboard';\nimport withAuth from '~/components/global/withAuth';\nimport { connect } from 'react-redux';\nimport {\n  profileUpdateAction,\n  profileClearAction,\n  passwordUpdateAction,\n} from '~/redux/actions/profile';\nimport Layout from '~/components/global/layout';\n\nclass ProfilePage extends Component {\n  static async getInitialProps(ctx, token) {\n    const res = await profileAPI(token);\n    const profileData = res.data;\n    return { profileData, token };\n  }\n\n  componentDidMount() {\n    const { clear } = this.props;\n    clear();\n  }\n\n  render() {\n    const { profileData, token, update, profile, clear, password_update } = this.props;\n\n    return (\n      <>\n        <Layout token={token} hasNavbar hasFooter>\n          <Container\n            profile={profile}\n            profileData={profileData}\n            token={token}\n            update={update}\n            clear={clear}\n            password_update={password_update}\n          />\n          ;\n        </Layout>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const { profile } = state;\n  return {\n    profile,\n  };\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    update: (fields, token) => {\n      dispatch(profileUpdateAction(fields, token));\n    },\n    password_update: (fields, token) => {\n      dispatch(passwordUpdateAction(fields, token));\n    },\n    clear: () => {\n      dispatch(profileClearAction());\n    },\n  };\n}\n\nexport default withAuth(true)(connect(mapStateToProps, mapDispatchToProps)(ProfilePage));\n"]},"metadata":{},"sourceType":"module"}