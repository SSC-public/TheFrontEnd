{"ast":null,"code":"import _ from 'lodash';\nimport produce from 'immer';\nimport cookie from 'js-cookie';\nimport { LOGIN_CLEAR, LOGIN_FAIL, LOGIN_SUCCESS, LOGIN_CHECK, SET_AUTH, LOGOUT } from '../actions/auth';\nimport initialState from '../store/initialState';\n\nfunction loginClearReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    draft.authorized = false;\n    draft.errors = {};\n    return draft;\n  });\n}\n\nfunction loginSuccessReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var token = action.payload.token;\n    draft.authorized = true;\n    draft.errors = {};\n    cookie.set('token', token, {\n      expires: 1\n    });\n    return draft;\n  });\n}\n\nfunction loginFailReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var errors = action.payload.errors;\n    draft.authorized = false;\n    draft.errors = errors;\n    return draft;\n  });\n}\n\nfunction loginCheckerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var fields = action.payload.fields;\n\n    _.forEach(fields, function (value, key) {\n      if (value === '') {\n        draft.errors[key] = 'فیلد خالی است.';\n      }\n    });\n\n    return draft;\n  });\n}\n\nfunction setAuthReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    var auth = action.payload.auth;\n    draft.authorized = auth;\n    return draft;\n  });\n}\n\nfunction logoutReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    draft.authorized = false;\n    cookie.remove('token');\n    return draft;\n  });\n}\n\nfunction authReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.auth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_CLEAR:\n      return loginClearReducer(state, action);\n\n    case LOGIN_FAIL:\n      return loginFailReducer(state, action);\n\n    case LOGIN_SUCCESS:\n      return loginSuccessReducer(state, action);\n\n    case LOGIN_CHECK:\n      return loginCheckerReducer(state, action);\n\n    case SET_AUTH:\n      return setAuthReducer(state, action);\n\n    case LOGOUT:\n      return logoutReducer(state, action);\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducers;","map":{"version":3,"sources":["/Users/Saba/Desktop/Front2/TheFrontEnd/redux/reducers/auth.js"],"names":["_","produce","cookie","LOGIN_CLEAR","LOGIN_FAIL","LOGIN_SUCCESS","LOGIN_CHECK","SET_AUTH","LOGOUT","initialState","loginClearReducer","state","auth","action","draft","authorized","errors","loginSuccessReducer","token","payload","set","expires","loginFailReducer","loginCheckerReducer","fields","forEach","value","key","setAuthReducer","logoutReducer","remove","authReducers","type"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport produce from 'immer';\nimport cookie from 'js-cookie';\nimport {\n  LOGIN_CLEAR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_CHECK,\n  SET_AUTH,\n  LOGOUT,\n} from '../actions/auth';\nimport initialState from '../store/initialState';\n\nfunction loginClearReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.authorized = false;\n    draft.errors = {};\n    return draft;\n  });\n}\n\nfunction loginSuccessReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { token } = action.payload;\n    draft.authorized = true;\n    draft.errors = {};\n    cookie.set('token', token, { expires: 1 });\n    return draft;\n  });\n}\n\nfunction loginFailReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { errors } = action.payload;\n    draft.authorized = false;\n    draft.errors = errors;\n    return draft;\n  });\n}\n\nfunction loginCheckerReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { fields } = action.payload;\n    _.forEach(fields, (value, key) => {\n      if (value === '') {\n        draft.errors[key] = 'فیلد خالی است.';\n      }\n    });\n    return draft;\n  });\n}\n\nfunction setAuthReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    const { auth } = action.payload;\n    draft.authorized = auth;\n    return draft;\n  });\n}\n\nfunction logoutReducer(state = initialState.auth, action) {\n  return produce(state, (draft) => {\n    draft.authorized = false;\n    cookie.remove('token');\n    return draft;\n  });\n}\n\nfunction authReducers(state = initialState.auth, action) {\n  switch (action.type) {\n    case LOGIN_CLEAR:\n      return loginClearReducer(state, action);\n    case LOGIN_FAIL:\n      return loginFailReducer(state, action);\n    case LOGIN_SUCCESS:\n      return loginSuccessReducer(state, action);\n    case LOGIN_CHECK:\n      return loginCheckerReducer(state, action);\n    case SET_AUTH:\n      return setAuthReducer(state, action);\n    case LOGOUT:\n      return logoutReducer(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default authReducers;\n"]},"metadata":{},"sourceType":"module"}