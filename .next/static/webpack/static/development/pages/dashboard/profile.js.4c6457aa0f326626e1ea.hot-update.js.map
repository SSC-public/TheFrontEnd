{"version":3,"file":"static/webpack/static/development/pages/dashboard/profile.js.4c6457aa0f326626e1ea.hot-update.js","sources":["webpack:///./components/dashboard/profile/form.jsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Grid, Form as F, Message, Button } from 'semantic-ui-react';\nimport Input from './input';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit() {\n    const { update, token } = this.props;\n    if (this.props.type === 'profile') {\n      const new_fields = {\n        profile: {\n          firstname_fa: this.firstname_fa.state.value,\n          firstname_en: this.firstname_en.state.value,\n          lastname_fa: this.lastname_fa.state.value,\n          lastname_en: this.lastname_en.state.value,\n          university: this.university.state.value,\n          birth_date: _.join(_.reverse(_.split(this.birth_date.state.value, '-')), '-'),\n        },\n      };\n      console.log(new_fields);\n      update(new_fields, token);\n    } else {\n      const new_fields = {\n        password: {\n          old_password: this.old_password.state.value,\n          new_password1: this.new_password1.state.value,\n          new_password2: this.new_password2.state.value,\n        },\n      };\n      console.log(new_fields);\n      update(new_fields, token);\n    }\n  }\n\n  render() {\n    const { success, fail, errors } = this.props.profile;\n    const profileData = { ...this.props.profileData, ...this.props.profileData.profile };\n    const { fields } = this.props.fields;\n    console.log(fields);\n    console.log(profileData);\n    return (\n      <Grid>\n        <Grid.Column verticalAlign=\"middle\">\n          <F onSubmit={this.onSubmit} dir=\"RTL\">\n            {_.map(fields, (field) => {\n              {\n                console.log(field);\n                console.log(profileData[field.en]);\n              }\n              return (\n                <Input\n                  ref={(c) => {\n                    this[field.en] = c;\n                  }}\n                  field={field}\n                  error={errors[field.en]}\n                  initial={profileData[field.en]}\n                />\n              );\n            })}\n            <Message hidden={!success} positive>\n              تغییرات با موفقیت ذخیره شد.\n            </Message>\n            <Message hidden={!fail} negative>\n              تغییرات بدون موفقیت ذخیره شد.\n            </Message>\n            <F.Button primary content=\"ذخیره‌ی تغییرات\" floated=\"right\" size=\"large\" />\n          </F>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Form;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAvEA;AACA;AAyEA;;;;A","sourceRoot":""}