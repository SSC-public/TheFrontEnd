{"version":3,"file":"static/webpack/static/development/pages/dashboard/profile.js.1dfc5b97b7e59a6fef43.hot-update.js","sources":["webpack:///./components/dashboard/profile/input.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { space, layout, color, border, typography } from 'styled-system';\nimport { DateInput } from 'semantic-ui-calendar-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Label = styled.label`\n  ${space}\n  ${layout}\n  ${typography}\n`;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = { value: this.props.initial };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  render() {\n    const { field, error } = this.props;\n    const { value } = this.state;\n\n    const labelWidth = '170px';\n\n    if (field.date) {\n      return (\n        <Form.Group inline>\n          <Label py={2} style={{ width: labelWidth }}>\n            {field.fa}:\n          </Label>\n          <DateInput\n            placeholder={field.fa}\n            name={field.en}\n            value={value}\n            onChange={this.handleChange}\n            popupPosition=\"top center\"\n            closeOnMouseLeave={false}\n            readOnly={field.readOnly}\n            width={6}\n            error={error}\n            icon={<FontAwesomeIcon icon={faCalendar} color=\"black\" />}\n            hideMobileKeyboard\n          />\n        </Form.Group>\n      );\n    }\n    return (\n      <Form.Group inline>\n        <Label py={2} style={{ width: labelWidth }}>\n          {field.fa}:\n        </Label>\n        <Form.Input\n          placeholder={field.fa}\n          name={field.en}\n          value={value}\n          onChange={this.handleChange}\n          readOnly={field.readOnly}\n          width={6}\n          error={error}\n          type={field.pass === true ? 'password' : 'none'}\n          // transparent={field.readOnly}\n        />\n      </Form.Group>\n    );\n  }\n}\n\nexport default Input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AA5DA;AACA;AA8DA;;;;A","sourceRoot":""}