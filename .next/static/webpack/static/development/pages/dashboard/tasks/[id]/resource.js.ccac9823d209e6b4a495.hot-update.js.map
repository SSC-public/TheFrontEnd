{"version":3,"file":"static/webpack/static/development/pages/dashboard/tasks/[id]/resource.js.ccac9823d209e6b4a495.hot-update.js","sources":["webpack:///./components/dashboard/resources/index.jsx"],"sourcesContent":["import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Button, Grid, Header, Image, Progress } from 'semantic-ui-react';\nimport Container from './container';\n\nfunction Pagination({ page, prevPage, nextPage, content }) {\n  return (\n    <div style={{ marginBottom: '3rem' }}>\n      {page > 0 ? (\n        <Button onClick={prevPage} floated=\"left\">\n          قبلی\n        </Button>\n      ) : (\n        <></>\n      )}\n      {page < content.sections.length ? (\n        <Button onClick={nextPage} floated=\"right\">\n          بعدی\n        </Button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nclass Resource extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { page: 0 };\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n  }\n\n  nextPage(event) {\n    event.preventDefault();\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    const { page } = this.state;\n    const { content } = this.props;\n    this.setState({\n      page: Math.min(page + 1, content.sections.length),\n    });\n  }\n\n  prevPage(event) {\n    event.preventDefault();\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n    const { page } = this.state;\n    this.setState({\n      page: Math.max(page - 1, 0),\n    });\n  }\n\n  render() {\n    const { content } = this.props;\n    const { page } = this.state;\n    return (\n      <>\n        <Grid\n          style={{ margin: '2rem auto', minHeight: 'calc(100vh - 333px)', direction: 'rtl' }}\n          centered\n        >\n          <Grid.Row>\n            <Grid.Column textAlign=\"center\" computer={10} tablet={12} mobile={14}>\n              <Progress\n                style={{ color: 'black' }}\n                value={page + 1}\n                total={content.sections.length + 1}\n                progress=\"ratio\"\n                success\n              />\n              <Pagination\n                page={page}\n                content={content}\n                prevPage={this.prevPage}\n                nextPage={this.nextPage}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign=\"center\" computer={10} tablet={12} mobile={14}>\n              <Header as=\"h1\" style={{ textAlign: 'center' }}>\n                {content.title_fa}\n              </Header>\n              <Header as=\"h4\" style={{ textAlign: 'center' }}>\n                زمان مطالعه: {content.time_to_read} دقیقه\n              </Header>\n              {!_.isEmpty(content.file) && (\n                <a\n                  style={{ textAlign: 'center', margin: '2rem', width: '100%' }}\n                  href={content.file}\n                  download\n                >\n                  دانلود منابع\n                </a>\n              )}\n              <br />\n              {page > 0 && !_.isEmpty(content.sections[page - 1].link_to_colab) && (\n                <a\n                  style={{ textAlign: 'center', margin: '2rem', width: '100%' }}\n                  href={content.sections[page - 1].link_to_colab}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  مشاهده در Google Colab\n                </a>\n              )}\n              <Image size=\"large\" style={{ margin: 'auto' }} src=\"/images/header.jpg\" />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column computer={10} tablet={12} mobile={14}>\n              {page === 0 ? (\n                <Container content={content.description_en} />\n              ) : (\n                <Container content={content.sections[page - 1].markdown} />\n              )}\n              <Pagination\n                page={page}\n                content={content}\n                prevPage={this.prevPage}\n                nextPage={this.nextPage}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Resource;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAKA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AAtGA;AACA;AAwGA;;;;A","sourceRoot":""}