{"version":3,"file":"static/webpack/static/development/pages/test.js.153ab0eede25ade70e2f.hot-update.js","sources":["webpack:///./components/blog/post/comments/comment.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Comment, Divider, Form, Button, Modal, Header } from 'semantic-ui-react';\n\nconst Alert = ({ open }) => (\n  <Modal basic size='small' open={open}>\n    <Header content='Archive Old Messages' />\n    <Modal.Content>\n      <p>\n        Your inbox is getting full, would you like us to enable automatic archiving of old messages?\n      </p>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button basic color='red' inverted>\n        No\n      </Button>\n      <Button color='green' inverted>\n        فهمیدم\n      </Button>\n    </Modal.Actions>\n  </Modal>\n);\n\nclass CommentComp extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { displayReply: 'none', open: false };\n    this.toReply = this.toReply.bind(this);\n    this.doneReply = this.doneReply.bind(this);\n    this.onInput = this.onInput.bind(this);\n  }\n\n  onInput () {\n    // handle logged in\n    this.setState({ open: true });\n  }\n\n  doneReply () {\n    // post data\n    this.setState({ displayReply: 'none' });\n  }\n\n  toReply () {\n    const { displayReply } = this.state;\n    if (displayReply === 'block') {\n      this.setState({ displayReply: 'none' });\n      return;\n    }\n    this.setState({ displayReply: 'block' });\n  }\n\n  render () {\n    const { author, date, content, isReply = false } = this.props;\n    const marginRight = isReply ? '2rem' : 'auto';\n    const display = isReply ? 'none' : 'auto';\n    const { displayReply, open } = this.state;\n    return (\n      <>\n        <Alert open={open} />\n        <Divider style={{ display }} />\n        <Comment style={{ marginRight }}>\n          <Comment.Content>\n            <Comment.Author as='a' style={{ float: 'right' }}>\n              {author}\n            </Comment.Author>\n            <Comment.Metadata>\n              <span>{date}</span>\n            </Comment.Metadata>\n            <Comment.Text\n              style={{ display: 'flex', justifyContent: 'flex-end', textAlign: 'right' }}\n            >\n              {content}\n            </Comment.Text>\n            <Comment.Actions style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <a onClick={this.toReply}>پاسخ دادن</a>\n            </Comment.Actions>\n            <Form reply style={{ display: displayReply }} onClick={this.onInput}>\n              <Form.TextArea style={{ height: '5em', direction: 'rtl' }} />\n              <Button secondary positive style={{ marginBottom: '1rem' }} onClick={this.doneReply}>\n                ثبت پاسخ\n              </Button>\n            </Form>\n          </Comment.Content>\n        </Comment>\n      </>\n    );\n  }\n}\n\nexport default CommentComp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AACA;AAkBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAMA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA/DA;AACA;AAiEA;;;;A","sourceRoot":""}