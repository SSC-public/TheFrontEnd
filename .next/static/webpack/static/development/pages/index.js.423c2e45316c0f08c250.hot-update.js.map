{"version":3,"file":"static/webpack/static/development/pages/index.js.423c2e45316c0f08c250.hot-update.js","sources":["webpack:///./components/global/withAuth.jsx"],"sourcesContent":["import _ from 'lodash';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dimmer } from 'semantic-ui-react';\nimport { ClipLoader } from 'react-spinners';\nimport { authorizeAction } from '~/redux/actions/auth';\n\nfunction withAuth(loggedIn) {\n  return (WrappedComponent) => {\n    class Wrapper extends Component {\n      static async getInitialProps(ctx) {\n        /* const { store, isServer, query, req } = ctx;\n        if (isServer) {\n          console.log(isServer, req.headers.cookie);\n        } else {\n          console.log(cookie.get('token'));\n        } */\n        const pageProps =\n          (await WrappedComponent.getInitialProps) && (await WrappedComponent.getInitialProps(ctx));\n        return { ...pageProps };\n      }\n\n      componentDidMount() {\n        const { authorize } = this.props;\n        authorize();\n      }\n\n      render() {\n        const { auth } = this.props;\n\n        if (auth.loading) {\n          return (\n            <>\n              <Head>\n                <title>DataDays 2020</title>\n              </Head>\n              <Dimmer active={auth.loading}>\n                <ClipLoader size={75} color=\"#fff\" loading={auth.loading} />\n              </Dimmer>\n            </>\n          );\n        }\n        if (_.isUndefined(loggedIn)) {\n          return <WrappedComponent {...this.props} />;\n        }\n        if (_.isEmpty(auth.token) && loggedIn) {\n          Router.push('/login');\n        }\n        if (!_.isEmpty(auth.token) && !loggedIn) {\n          Router.push('/dashboard/tasks');\n        }\n        return <WrappedComponent {...this.props} />;\n      }\n    }\n\n    function mapStateToProps(state, ownProps) {\n      const { auth } = state;\n      return {\n        auth,\n      };\n    }\n\n    function mapDispatchToProps(dispatch, ownProps) {\n      return {\n        authorize: () => dispatch(authorizeAction()),\n      };\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n  };\n}\n\nexport default withAuth;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AAEA;AACA;AAjBA;AAAA;AAAA;AAmBA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AA8CA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}